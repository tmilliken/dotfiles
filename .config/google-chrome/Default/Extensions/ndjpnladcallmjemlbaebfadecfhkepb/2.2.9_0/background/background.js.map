{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/common/constants.js","webpack:///./app/common/utilities.ts","webpack:///./app/diagnostics/index.js","webpack:///./app/diagnostics/telemetry.service.js","webpack:///./app/diagnostics/ariaTelemetry.service.js","webpack:///./app/common/permissions.ts","webpack:///./app/common/browserHandler.ts","webpack:///./app/user/index.js","webpack:///./app/user/protectedResourceInterceptor.js","webpack:///./app/user/msaUser.service.js","webpack:///./app/user/o365User.service.js","webpack:///./app/user/msidUser.service.js","webpack:///./app/user/user.service.js","webpack:///./app/diagnostics/aria.ts","webpack:///./app/common/httpInterceptor.js","webpack:///./app/common/logDecorator.js","webpack:///./app/common/storage.service.js","webpack:///./app/common/index.js","webpack:///./app/common/notification.service.js","webpack:///./app/background/background.controller.js","webpack:///./app/copypaste/index.js","webpack:///./app/file/index.js","webpack:///./app/file/file.service.js","webpack:///./app/file/fileLoader.service.js","webpack:///./app/file/oneDriveFile.service.js","webpack:///./app/file/sharePointFile.service.js","webpack:///./app/background/background.js","webpack:///./third_party/angularjs-localizationservice.1.0.1/localize.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","IDTYPE","MSACID","ORGIDPUID","ACTIVITY","AUTHENTICATION","NAME","AUTHORIZATION","NOTIFICATION","TELEMETRY","USERINFO_AVAILABLE","SSO","LOGOUT","REQUEST_TOKEN","LOG","APPINFO_NAME","FILE","APPLICATION_IMAGE_PATH","APPLICATION_LABEL","ERROR","MAX_SIZE_BYTE_LIMIT","OFFICE_APP_FILE_ASSOCIATIONS","EXCEL","ONENOTE","POWERPOINT","WORD","OFFICE_MIME_TYPES","ORIGIN","HTML5","LOCAL_PATH","SUPPORTED_APPLICATIONS","SUPPORTED_FILE_TYPES","JQUERY","EVENT_ID","KEYPRESS","ENTER","ARROWLEFT","ARROWUP","ARROWRIGHT","ARROWDOWN","MOUSEDOWN","LEFT_BUTTON_CLICK","LINKS","OFFICE_URL","PROGRESSPAGE_URL","SETTINGS_URL","SIGNUP","UNINSTALL","OFFICE_HOME_URL","OFFICE_HOME_DEV_URL","SUPPORT_URL","SUPPORT_URL_EDITOR","MYACCOUNT_MSA_URL","MYACCOUNT_O365_URL","APP","arguments","SWAY","SWAY_DEFAULT","ONEDRIVE","TEAMS","SHAREPOINT_DEFAULT","OUTLOOK_DEFAULT","OUTLOOK_O365","MENU_VIEWMODE","NONE","NEW","OPEN","ACCOUNT","SETTINGS","OAUTH","ACCESS_TOKEN","AUTH_CODE","CODE","EXPIRES_ON","REFRESH_TOKEN","SERVICE_ENDPOINT","SERVICE_ID","O365CONFIG","CLIENT_ID","CLIENT_SECRET","GRAPH_RESOURCE","ENDPOINTS","INSTANCE","LOGOUT_URI","MRU_URL","PHOTO_URL","ONEDRIVE_URL","SHAREPOINT_URL","REDIRECT_URI","UPLOAD_URL","FEDERATED_URL","MSACONFIG","ONEDRIVE_ITEMS_URL","SCOPE","URL","USERINFO_URL","FILEACCESS","id","priority","type","message","FILE_MAX_SIZE_BYTE_LIMIT_REACHED","FILE_UPLOAD_FAILURE_GENERIC","FILE_UPLOAD_FAILURE_SERVER","FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA","FILE_UPLOAD_IN_PROGRESS","SETDEFAULT","AUTOSAVE","buttons","title","AUTOSAVETOONEDRIVE","AUTOSAVETOSHAREPOINT","NOTSIGNEDIN","UNSUPPORTEDFILETYPE","INVALIDSUBSCRIPTION","WEBDOCREDIRECT","DISPLAY_URL","QUERY_OPTION","RECENTS","LIST_LENGTH_MSA","LIST_LENGTH_O365","FILTER","ONEDRIVE_ENDPOINT","DISPLAY_PANEL","LIST","LOADING","NO_DOCS","CANCELLED","GENERIC","NO_DOCS_FOUND","UNSUPPORTED_USER_TYPE","SIGNINSTATUS","UNKNOWN","HASREFRESHTOKEN","SIGNEDIN","COMMAND","SET_DISABLED","TRACK_TRACE","TRACK_EVENT","ENABLED_SETTING_STORAGE_KEY","EVENT_PREFIX","PII_TYPE","IDENTITY","USER_TYPE","MSA","O365","USER_SERVICE_TYPE","MSID","TIMEOUT","DEFAULT_REQUEST","USER_INFO_LOOKUP","USER_INFO_LOOKUP_TEST","COPY_PASTE","TEST","testCommand","PASTE","pasteCommand","GET_CLIPBOARD_DATA","getClipboardDataCommand","GET_AVAILABLE_COMMANDS","getAvailableCommandsCommand","ERROR_RETRIES","HTTP_REQUEST","BROWSER_ICON","DEFAULT","INACTIVE","MESSAGE_CHANNEL","RESPONSE_STATUS_SUCCESS","RESPONSE_STATUS_FAIL","RESPONSE_CODE_NO_SUPPORT","RESPONSE_CODE_INVALID","Utilities","deserializeQuery","query","match","pl","search","decode","decodeURIComponent","replace","obj","exec","getFileExtension","fileName","docExt","splitDoc","toLowerCase","navigateToUrlWithNewTab","url","openActive","tabs","active","this","isUndefinedOrNull","isNotUndefinedOrNull","isExtensionInTestingMode","jasmine","isExtensionInDevelopmentMode","browser","extension","runtime","getURL","test","chrome","manifest","getManifest","undefined","update_url","isEditorEnabled","background","scripts","includes","shouldShowEditorMaterial","version_name","indexOf","getAppDescription","description","isBackgroundContext","loc","location","href","getBackgroundPage","getCurrentTime","Math","round","Date","getTime","isChrome","getBrowserName","navigator","vendor","getBrowserAndVersion","browserVersion","checkUserAgentForBrowser","regex","RegExp","browserMatch","userAgent","groups","userAgentData","brands","find","entry","brand","version","orderedBrowserMatches","isRTL","uiLang","i18n","getUILanguage","setIcon","iconPath","browserAction","path","a","service","$injector","ariaTelemetry","telemetryProviders","addCustomProperties","async","properties","userService","pii","appVersion","language","constants","userType","getUserType","semanticContext","getSemanticContext","setUserId","userInfo","getUserInfo","cid","features","experimentFeatures","puid","tid","getEnabledSettingFromStorage","$q","storage","deferred","defer","then","resolve","settings","settingName","storedSetting","JSON","parse","readSettingValueOrUndefined","telemetry_enabled","promise","getEnabledSetting","setEnabledSetting","enabled","set","stringify","lastUpdate","now","manualOverride","setEnabledSettingInStorage","sendMessage","activity","command","trackEvent","eventName","measurements","isUndefined","isString","propertiesToTrack","extend","trackTrace","$window","addEventProperties","eventProperties","setProperty","enabledSetting","setName","ariaLogger","logEvent","promised","proc","args","Promise","reject","results","checkPermission","requested","log","Array","isArray","permissions","granted","getAll","console","debug","filter","permission","filterNeeded","contains","request","eventProps","lastError","err","optional","optional_permissions","browserListeners","propertyList","browserHandler","edgeBrowser","notifications","clear","notificationId","callback","options","alert","onButtonClicked","addListener","onClicked","getPlatformInfo","mergeProperties","target","source","entries","concat","mock","icon","getMessage","onMessage","listener","removeListener","local","remove","createProperties","BrowserHandler","config","$httpProvider","$provide","interceptors","factory","$log","headers","error","resource","acquireToken","token","warn","Authorization","responseError","response","status","clearToken","getConfig","lookupUserInfo","oneDriveUrl","$http","method","email","emails","account","getResourceForEndpoint","endpoint","notification","configEndpoint","tokenData","idToken","user","parsedJson","encodedIdToken","decodedToken","jwtToken","matches","header","JWSPayload","JWSSig","decodeJwt","base64Decoded","base64IdToken","atob","escape","base64DecodeStringUrlSafe","_logstatus","stack","extractIdToken","aud","upn","getUserProfile","id_token","httpRequest","webUrl","reason","show","getOneDriveUrl","sharePointUrl","getSharePointUrl","scopes","userInfoUrl","aadV2Url","toString","redirectUri","logoutUrl","authorizeUrl","loginUrl","createParams","prompt","getUserService","additionalParams","defaultParams","URLSearchParams","assign","fetchUserInfo","prop","deleteMetaDataTags","fetchOneDriveUrl","fetchOneDriveQuota","quota","parseInt","total","info","endpointResources","origin","paths","urlPath","pathname","keys","reduce","previous","current","startsWith","warning","infoFuncs","all","requestAccessToken","scope","response_type","params","navigateToAuthEndpoint","access_token","msaUserService","o365UserService","msidUserService","userOrServiceType","getServiceProvider","getAccessToken","isTokenExpired","expires_on","refreshToken","getIdentityProperty","getRefreshToken","refresh_token","grant_type","tokenUrl","refreshAccessToken","saveTokens","Error","statusText","authorize","serviceType","code","accessToken","acquireTokenFromCode","setUserType","login","error_description","typeOrToken","values","tenantInfo","tenants","payload","parseJwtToken","tenant","resolveTypeAndTenant","tenantEntry","identity","getStoredIdentity","unpackStateParam","state","appid","split","inIFrame","searchParams","param","createGuid","frameId","timeout","cleanup","iframe","document","getElementById","parentNode","removeChild","sender","clearTimeout","has","iframeAuthDelay","setTimeout","createElement","setAttribute","style","visibility","position","width","height","border","body","appendChild","src","handleLogin","logout","handleLogout","useAuthNext","toggle","override","checkAuthFlighting","noLogout","checkedTime","toUTCString","storageData","elapsed","authNext","lastCheck","flighted","force","accept","contentType","deviceId","getDeviceId","AppId","FeatureFlags","userServiceProvider","getServiceForUserType","sourceValue","forEach","getEndpointBase","expires_in","Number","item","index","tokenEntry","supportsScopes","required","resourceScope","allTokens","saveUserInfo","expiresOn","userPrincipalName","getPhotoFromServer","photoUrl","photoRequest","responseType","photo","reader","FileReader","onload","readAsDataURL","char","timestamp","performance","rand","random","floor","close","tab","checkTransitionAuth","setInterval","initCheckTransition","isLoggedIn","getEndpointUrlForCurrentUser","getUserPhoto","waitForUserInfo","userInfoListener","giveUpDelay","giveUp","cleanUp","getUserLicenseInfo","tenantId","AWTLogManager","initialize","setContext","getLogger","httpInterceptor","$timeout","retries","error_codes","logDecorator","$delegate","telemetry","getTruncatedString","string","substring","logToBackground","severity","filename","toLocaleString","month","day","hour","minute","second","extensionOrigin","trimExtensionOrigin","messageString","prepareLog","originalFunction","severityLevel","logParams","fullStack","mappedStack","caller","matched","pop","timeStamp","dumpStorage","decorator","items","localize","getLocalizedString","iconUrl","wasCleared","imageUrl","progress","controller","fileService","copyPasteService","webRedirectDisabled","sessionInfo","documentTabId","webRedirect_disabled","windows","onFocusChanged","windowId","currentTime","startTime","duration","LastSession","isInteger","start_time","logDay","today","setHours","minutes","updateSessionInfo","onChanged","changes","areaName","newValue","webRequest","onSendHeaders","requestHeaders","tabId","urls","onHeadersReceived","responseHeaders","isResponseHeaderPrivate","displayWebDocRedirectNotification","redirectUrl","onBeforeRequest","activeTabId","upload","fileUrl","openFileUrlInTab","onErrorOccurred","details","onInstalled","platformInfo","os","supportUrl","e","previousVersion","localStorage","getItem","profile","displayAutoSaveNotification","sendResponse","eventId","localeCompare","sensitivity","RespondWithError","CreateInvalidMethodResponse","sendNativeMessage","setUninstallUrl","onMessageExternal","msg","handleTestCommand","handlePasteCommand","handleGetClipboardDataCommand","handleGetAvailableCommands","addEventListener","onPasteEvent","onUpdated","changeInfo","getProfileUserInfo","NameSpaceType","DomainName","currentUrl","update","uploadFile","file","startUrl","windowInfo","getDisplayTabId","setUninstallURL","ext","IsInvalidMethod","invalidResponse","fileBrowserHandler","onExecute","fileEntries","uploadFiles","event","imageReader","fileReader","fileLoader","sharePointFileService","oneDriveFileService","currentUserType","doUpload","fileServiceProvider","getFileServiceProvider","handleFileUploadError","fileInfo","fileOrigin","loadFile","autoSaveNotification","handleFileLoadError","size","FILE_SIZE_MAX_EXCEEDED","UNSUPPORTED_FILE_TYPE","encodeURI","content","Int8Array","readAsArrayBuffer","loadFileFromHTML5","filePath","xhr","XMLHttpRequest","open","onreadystatechange","readyState","LOAD_FROM_PATH","send","loadFileFromPath","byteLength","encodeURIComponent","transformRequest","toISOString","etag","eTag","documentElement","angular","$filter","input","directive","i18nDirective","restrict","updateText","elm","tag","text","link","attrs","$observe","i18NAttrDirective","attr"],"mappings":"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","file":"\\background\\background.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([55,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { CopyPasteService } from '@1js/office-online-ccp';\r\n\r\nexport default {\r\n    IDTYPE: {\r\n        MSACID: 'MSACID',\r\n        ORGIDPUID: 'OrgIdPUID'\r\n    },\r\n    ACTIVITY: {\r\n        AUTHENTICATION: {\r\n            NAME: 'authentication'\r\n        },\r\n        AUTHORIZATION: {\r\n            NAME: 'authorization'\r\n        },\r\n        NOTIFICATION: {\r\n            NAME: 'notification'\r\n        },\r\n        TELEMETRY: {\r\n            NAME: 'telemetry'\r\n        },\r\n        USERINFO_AVAILABLE: {\r\n            NAME: 'userInfoAvailable'\r\n        },\r\n        SSO: {\r\n            NAME: 'sso'\r\n        },\r\n        LOGOUT: {\r\n            NAME: 'logout'\r\n        },\r\n        REQUEST_TOKEN: {\r\n            NAME: 'requestToken'\r\n        },\r\n        LOG: {\r\n            NAME: 'log'\r\n        },\r\n    },\r\n    APPINFO_NAME: 'OfficeOnlineExtension',\r\n    FILE: {\r\n        APPLICATION_IMAGE_PATH: {\r\n            'excel': 'assets/excel_doc.png',\r\n            'onenote': 'assets/onenote_doc.png',\r\n            'powerpoint': 'assets/powerpoint_doc.png',\r\n            'unknown': 'assets/generic_doc.png',\r\n            'word': 'assets/word_doc.png'\r\n        },\r\n        APPLICATION_LABEL: {\r\n            'excel': 'ExcelOnlineAppName',\r\n            'onenote': 'OneNoteOnlineAppName',\r\n            'powerpoint': 'PowerPointOnlineAppName',\r\n            'unknown': 'OfficeOnlineAppName',\r\n            'word': 'WordOnlineAppName'\r\n        },\r\n        ERROR: {\r\n            'FILE_SIZE_MAX_EXCEEDED': 'fileSizeMaxExceeded',\r\n            'LOAD_FROM_PATH': 'loadFromPath',\r\n            'UNSUPPORTED_FILE_TYPE': 'unsupportedFileType'\r\n        },\r\n        MAX_SIZE_BYTE_LIMIT: 1024 * 1024 * 4,\r\n        OFFICE_APP_FILE_ASSOCIATIONS: {\r\n            EXCEL: 'excel',\r\n            ONENOTE: 'onenote',\r\n            POWERPOINT: 'powerpoint',\r\n            WORD: 'word'\r\n        },\r\n        OFFICE_MIME_TYPES: {\r\n            'application/msword': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.template': 'word',\r\n            'application/vnd.oasis.opendocument.text': 'word',\r\n            'application/vnd.ms-powerpoint': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.slideshow': 'powerpoint',\r\n            'application/vnd.oasis.opendocument.presentation': 'powerpoint',\r\n            'application/vnd.ms-excel': 'excel',\r\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'excel',\r\n            'application/vnd.ms-excel.sheet.binary.macroEnabled.12': 'excel',\r\n            'application/vnd.ms-excel.sheet.macroEnabled.12': 'excel',\r\n            'application/vnd.oasis.opendocument.spreadsheet': 'excel'\r\n        },\r\n        ORIGIN: {\r\n            HTML5: 'html5',\r\n            LOCAL_PATH: 'local_path'\r\n        },\r\n        SUPPORTED_APPLICATIONS: [\r\n            'Word',\r\n            'Excel',\r\n            'PowerPoint',\r\n            'OneNote'\r\n        ],\r\n        SUPPORTED_FILE_TYPES: {\r\n            'doc': 'word',\r\n            'dot': 'word',\r\n            'docx': 'word',\r\n            'dotx': 'word',\r\n            'odt': 'word',\r\n            'ppt': 'powerpoint',\r\n            'pot': 'powerpoint',\r\n            'pps': 'powerpoint',\r\n            // BUG: 214522: 'ppa': 'powerpoint',\r\n            'pptx': 'powerpoint',\r\n            'ppsx': 'powerpoint',\r\n            'odp': 'powerpoint',\r\n            // BUG: 214522: 'xls': 'excel',\r\n            // BUG: 214522: 'xlt': 'excel',\r\n            // BUG: 214522: 'xla': 'excel',\r\n            'xlsx': 'excel',\r\n            'xlsm': 'excel',\r\n            'xlsb': 'excel',\r\n            'ods': 'excel',\r\n            'notebook': 'onenote'\r\n        }\r\n    },\r\n    JQUERY: {\r\n        EVENT_ID: {\r\n            // Reference: http://api.jquery.com/keypress/\r\n            KEYPRESS: {\r\n                ENTER: 13,\r\n                ARROWLEFT: 37,\r\n                ARROWUP: 38,\r\n                ARROWRIGHT: 39,\r\n                ARROWDOWN: 40\r\n            },\r\n            // Reference: http://api.jquery.com/mousedown/\r\n            MOUSEDOWN: {\r\n                LEFT_BUTTON_CLICK: 1\r\n            }\r\n        }\r\n    },\r\n    LINKS: {\r\n        OFFICE_URL: 'https://portal.office.com/home',\r\n        PROGRESSPAGE_URL: 'https://onedrive.live.com',\r\n        SETTINGS_URL: 'chrome://extensions',\r\n        SIGNUP: 'https://onedrive.live.com/about',\r\n        UNINSTALL: 'https://contentstorage.osi.office.net/officeonlineextensionuninstall/uninstall.html',\r\n        OFFICE_HOME_URL: 'https://go.microsoft.com/fwlink/?linkid=859986',\r\n        OFFICE_HOME_DEV_URL: 'https://go.microsoft.com/fwlink/?linkid=860665',\r\n        SUPPORT_URL: 'https://aka.ms/officeextsignin',\r\n        SUPPORT_URL_EDITOR: 'https://aka.ms/OfficeEditorExtension',\r\n        MYACCOUNT_MSA_URL: 'https://go.microsoft.com/fwlink/?LinkId=823747',\r\n        MYACCOUNT_O365_URL: 'https://go.microsoft.com/fwlink/?LinkId=824642',\r\n        APP: {\r\n            WORD: function () {return `https://office.live.com/start/word.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            EXCEL: function () {return `https://office.live.com/start/excel.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            POWERPOINT: function () {return `https://office.live.com/start/powerpoint.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            ONENOTE: function () {return `https://www.onenote.com/notebooks?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY: function () {return `https://www.sway.com/?auth_pvr=${arguments[0]}&auth_upn=${arguments[1]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY_DEFAULT: 'https://www.sway.com/?WT.mc_id=Chrome_OfficeApp',\r\n            ONEDRIVE: 'https://onedrive.live.com',\r\n            TEAMS: 'https://teams.microsoft.com',\r\n            SHAREPOINT_DEFAULT: 'https://products.office.com/sharepoint',\r\n            OUTLOOK_DEFAULT: 'https://outlook.com',\r\n            OUTLOOK_O365: 'https://outlook.office365.com'\r\n        }\r\n    },\r\n    MENU_VIEWMODE: {\r\n        NONE: 0,\r\n        NEW: 1,\r\n        OPEN: 2,\r\n        ACCOUNT: 3,\r\n        SETTINGS: 4\r\n    },\r\n    OAUTH: {\r\n        ACCESS_TOKEN: 'access_token',\r\n        AUTH_CODE: 'authorization_code',\r\n        CODE: 'code',\r\n        EXPIRES_ON: 'expires_on',\r\n        REFRESH_TOKEN: 'refresh_token',\r\n        SERVICE_ENDPOINT: 'service_endpoint',\r\n        SERVICE_ID: 'service_id'\r\n    },\r\n    O365CONFIG: {\r\n        CLIENT_ID: 'd08f258a-c5dd-4a8f-8afc-9321d67c767a',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579837]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: '4C3JSV:94f_WBYDF+RkH@TX9QhIrzijR',\r\n        GRAPH_RESOURCE: 'https://graph.microsoft.com',\r\n        ENDPOINTS: {\r\n            'officeapps.live.com': 'https://officeapps.live.com',\r\n            'graph.microsoft.com': 'https://graph.microsoft.com'\r\n        },\r\n        INSTANCE: 'https://login.windows.net/common/oauth2/',\r\n        LOGOUT_URI: 'https://login.microsoftonline.com/logout.srf',\r\n        MRU_URL: 'https://ocws.officeapps.live.com/ocs/docs/recent/',\r\n        PHOTO_URL: 'https://graph.microsoft.com/v1.0/me/photo/$value',\r\n        ONEDRIVE_URL: 'https://graph.microsoft.com/v1.0/me/drive/root',\r\n        SHAREPOINT_URL: 'https://graph.microsoft.com/v1.0/sites/root',\r\n        REDIRECT_URI: 'https://login.microsoftonline.com/login.srf',\r\n        UPLOAD_URL: 'https://graph.microsoft.com/v1.0/me/drive/root:/',\r\n        FEDERATED_URL: 'https://login.microsoftonline.com/getuserrealm.srf'\r\n    },\r\n    MSACONFIG: {\r\n        CLIENT_ID: '000000004016DA34',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579838]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: 'qXom9iuDN8qMUKe5oU6DHrRxS8bikLrI',\r\n        INSTANCE: 'https://login.live.com/oauth20_authorize.srf',\r\n        LOGOUT_URI: 'https://login.live.com/oauth20_logout.srf',\r\n        ONEDRIVE_ITEMS_URL: 'https://api.onedrive.com/v1.0/drive/items/',\r\n        PHOTO_URL: 'https://apis.live.net/v5.0/me/picture',\r\n        REDIRECT_URI: 'https://login.live.com/oauth20_desktop.srf',\r\n        SCOPE: 'wl.basic+wl.emails+wl.signin+wl.offline_access+onedrive.readwrite+wl.skydrive',\r\n        URL: 'https://login.live.com/oauth20_token.srf',\r\n        USERINFO_URL: 'https://apis.live.net/v5.0/me'\r\n    },\r\n    /* Notification priorities:\r\n       -2, -1: Do not use; deprecated\r\n       0 - Lowest priority; will not display in Edge\r\n       1 - Medium priority\r\n       2 - Highest priority\r\n    */\r\n    NOTIFICATION: {\r\n        FILEACCESS: {\r\n            id: 'fileAccess',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileAccess'\r\n        },\r\n        FILE_MAX_SIZE_BYTE_LIMIT_REACHED: {\r\n            id: 'fileMaxSizeByteLimitReached',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileMaxSizeByteLimitReached'\r\n        },\r\n        FILE_UPLOAD_FAILURE_GENERIC: {\r\n            id: 'fileUploadFailureGeneric',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureGeneric'\r\n        },\r\n        FILE_UPLOAD_FAILURE_SERVER: {\r\n            id: 'fileUploadFailureServer',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureServer'\r\n        },\r\n        FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA: {\r\n            id: 'fileUploadFailureUnsupportedMedia',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureUnsupportedMedia'\r\n        },\r\n        FILE_UPLOAD_IN_PROGRESS: {\r\n            id: 'fileUploadInProgress',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadInProgress'\r\n        },\r\n        SETDEFAULT: {\r\n            id: 'setDefault',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationSetDefault'\r\n        },\r\n        AUTOSAVE: {\r\n            id: 'autoSave',\r\n            priority: 0,\r\n            type: 'basic',\r\n            buttons: [\r\n                {title: 'NotificationAutoSaveButton'}\r\n            ]\r\n        },\r\n        AUTOSAVETOONEDRIVE: 'NotificationAutoSaveToOneDrive',\r\n        AUTOSAVETOSHAREPOINT: 'NotificationAutoSaveToSharePoint',\r\n        NOTSIGNEDIN: {\r\n            id: 'notSignedIn',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationNotSignedIn'\r\n        },\r\n        UNSUPPORTEDFILETYPE: {\r\n            id: 'unsupportedFileType',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationUnsupportedFileType'\r\n        },\r\n        INVALIDSUBSCRIPTION: {\r\n            id: 'invalidSubscription',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationInvalidSubscription'\r\n        },\r\n        WEBDOCREDIRECT: {\r\n            id: 'webDocRedirect',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationWebDocRedirect',\r\n            buttons: [\r\n                {title: 'NotificationWebDocRedirectButton'}\r\n            ]\r\n        }\r\n    },\r\n    ONEDRIVE: {\r\n        DISPLAY_URL: 'https://onedrive.live.com/view.aspx?cid=',\r\n        INSTANCE: 'https://api.onedrive.com/v1.0',\r\n        QUERY_OPTION: '?@name.conflictBehavior=rename'\r\n    },\r\n    RECENTS: {\r\n        LIST_LENGTH_MSA: 3,\r\n        LIST_LENGTH_O365: 3,\r\n        FILTER: '?apps=powerpoint,word,excel,onenote&sort=date',\r\n        ONEDRIVE_ENDPOINT: 'https://api.onedrive.com/v2.1/drive/recent',\r\n        DISPLAY_PANEL: {\r\n            ERROR: 0,\r\n            LIST: 1,\r\n            LOADING: 2,\r\n            NO_DOCS: 3,\r\n            NONE: 4\r\n        },\r\n        ERROR: {\r\n            CANCELLED: 0,\r\n            GENERIC: 1,\r\n            NO_DOCS_FOUND: 2,\r\n            UNSUPPORTED_USER_TYPE: 3\r\n        }\r\n    },\r\n    SIGNINSTATUS: {\r\n        UNKNOWN: -1,\r\n        NONE: 0,\r\n        HASREFRESHTOKEN: 1,\r\n        SIGNEDIN: 2\r\n    },\r\n    TELEMETRY: {\r\n        COMMAND: {\r\n            SET_DISABLED: 'setDisabledTelemetry',\r\n            TRACK_TRACE: 'trackTrace',\r\n            TRACK_EVENT: 'trackEvent'\r\n        },\r\n        ENABLED_SETTING_STORAGE_KEY: 'telemetry_enabled',\r\n        EVENT_PREFIX: 'OO_CHROME_',\r\n        PII_TYPE: {\r\n            IDENTITY: 10\r\n        }\r\n    },\r\n    USER_TYPE: {\r\n        MSA: 'msa',\r\n        O365: 'aad',\r\n        NONE: 'none'\r\n    },\r\n    USER_SERVICE_TYPE: {\r\n        MSA: 'msaUserService',\r\n        O365: 'o365UserService',\r\n        MSID: 'msidUserService',\r\n        NONE: 'noneUserService'\r\n    },\r\n    TIMEOUT: {\r\n        DEFAULT_REQUEST: 10000,\r\n        USER_INFO_LOOKUP: 5000,\r\n        USER_INFO_LOOKUP_TEST: 50\r\n    },\r\n    COPY_PASTE: {\r\n        TEST: CopyPasteService.testCommand,\r\n        PASTE: CopyPasteService.pasteCommand,\r\n        GET_CLIPBOARD_DATA: CopyPasteService.getClipboardDataCommand,\r\n        GET_AVAILABLE_COMMANDS: CopyPasteService.getAvailableCommandsCommand\r\n    },\r\n    ERROR_RETRIES: {\r\n        HTTP_REQUEST: 3\r\n    },\r\n    BROWSER_ICON: {\r\n        DEFAULT: '../assets/icon_20.png',\r\n        INACTIVE: '../assets/icon_inactive_20.png'\r\n    },\r\n    SSO: {\r\n        MESSAGE_CHANNEL: 'com.microsoft.browsercore',\r\n        RESPONSE_STATUS_SUCCESS: 'Success',\r\n        RESPONSE_STATUS_FAIL: 'Fail',\r\n        RESPONSE_CODE_NO_SUPPORT: 'NoSupport',\r\n        RESPONSE_CODE_INVALID: -2147186943\r\n    },\r\n};\r\n","import BrowserHandler from '../common/browserHandler';\r\n\r\nif (!(window as any).Utilities) {\r\n    (window as any).Utilities = {\r\n        // Deserialize query string to an object\r\n        deserializeQuery: function (query: string): any {\r\n            var match: RegExpExecArray,\r\n                pl = /\\+/g, // Regex for replacing addition symbol with a space\r\n                search = /([^&=]+)=?([^&]*)/g,\r\n                decode = function (s: string): string {\r\n                    return decodeURIComponent(s.replace(pl, ' '));\r\n                },\r\n                obj: any = {};\r\n            match = search.exec(query);\r\n            while (match) {\r\n                obj[decode(match[1])] = decode(match[2]);\r\n                match = search.exec(query);\r\n            }\r\n\r\n            return obj;\r\n        },\r\n\r\n        // Gets the file extension\r\n        getFileExtension: function (fileName: string): string {\r\n            var docExt = '';\r\n            if (fileName) {\r\n                var splitDoc = fileName.match(/(?:\\.)(\\w+)$/);\r\n                if (splitDoc && splitDoc.length > 1) {\r\n                    docExt = splitDoc[splitDoc.length - 1].toLowerCase();\r\n                }\r\n            }\r\n\r\n            return docExt;\r\n        },\r\n\r\n        // Navigate to url\r\n        navigateToUrlWithNewTab: function (url: string, openActive: boolean): void {\r\n            BrowserHandler.tabs.create({\r\n                url: url,\r\n                active: this.isUndefinedOrNull(openActive) ? true : openActive,\r\n            });\r\n            var props: chrome.tabs.CreateProperties;\r\n        },\r\n\r\n        // Simple check for not undefined or null\r\n        isNotUndefinedOrNull: function (obj: any): boolean {\r\n            return !this.isUndefinedOrNull(obj);\r\n        },\r\n\r\n        // Simple check for undefined or null\r\n        isUndefinedOrNull: function (obj: any): boolean {\r\n            return typeof obj === 'undefined' || obj === null;\r\n        },\r\n\r\n        // Determines whether the extension is running in testing mode (running jasmine unit tests)\r\n        isExtensionInTestingMode: function (): boolean {\r\n            return this.isNotUndefinedOrNull((window as any).jasmine);\r\n        },\r\n\r\n        // Determines whether extension is running in developer mode; defaults to true if inconclusive\r\n        isExtensionInDevelopmentMode: function (): boolean {\r\n            // testing mode is not development mode\r\n            if (this.isExtensionInTestingMode()) {\r\n                return false;\r\n            }\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                var url = BrowserHandler.runtime.getURL('');\r\n\r\n                if (typeof url !== 'undefined' && url !== null) {\r\n                    if (/_microsoftofficeonline_/i.test(url)) {\r\n                        return false; // from store\r\n                    }\r\n                }\r\n            }\r\n            if ((window as any).chrome && (window as any).chrome.extension) {\r\n                // Make sure chrome manifest exists\r\n                var manifest = this.getManifest();\r\n                if (manifest === undefined || manifest === null) {\r\n                    return false;\r\n                }\r\n\r\n                // Google Web Store adds key and update_url keys to the manifest\r\n                if (manifest.key !== undefined || manifest.update_url !== undefined) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        // Determines whether Editor is enabled by looking at the manifest.\r\n        // This should work only in chrome.\r\n        // TODO: change this to something more generic like send a message that only the desired background\r\n        // script will respond to, or generate a look up of partner extensions using their name as found in\r\n        // their manifest \"name\" which is updated when the package is updated/added\r\n        isEditorEnabled: function (): boolean {\r\n            if (!(window.chrome && window.chrome.extension)) {\r\n                return false;\r\n            }\r\n\r\n            // Make sure chrome manifest exists\r\n            var manifest = this.getManifest();\r\n\r\n            // Editor adds a specific background page to the extension\r\n            return manifest && manifest.background && manifest.background.scripts && manifest.background.scripts.includes('editor/background.js');\r\n        },\r\n\r\n        // Determines whether Editor marketing is enabled by looking at the manifest.\r\n        // This should work only in chrome.\r\n        shouldShowEditorMaterial: function (): boolean {\r\n            if (!(window.chrome && window.chrome.extension)) {\r\n                return false;\r\n            }\r\n\r\n            // Make sure chrome manifest exists\r\n            var manifest = this.getManifest();\r\n\r\n            // Editor adds a specific background page to the extension\r\n            return manifest && manifest.version_name && manifest.version_name.indexOf('[ed]') != -1;\r\n        },\r\n\r\n        // Returns the message id to use.\r\n        // This should work only in chrome.\r\n        getAppDescription: function (): string {\r\n            if (!(window.chrome && window.chrome.extension)) {\r\n                return undefined;\r\n            }\r\n\r\n            // Make sure chrome manifest exists\r\n            var manifest = this.getManifest();\r\n\r\n            return manifest.description;\r\n        },\r\n\r\n        // Gets the Chrome runtime manifest object\r\n        getManifest: function (): any {\r\n            // Make sure the BrowserHandler.runtime.getManifest() function exists\r\n            if (typeof BrowserHandler.runtime !== 'object' || typeof BrowserHandler.runtime.getManifest !== 'function') {\r\n                return null;\r\n            }\r\n\r\n            // Make sure manifest exists\r\n            var manifest = BrowserHandler.runtime.getManifest();\r\n            if (manifest === undefined || manifest === null) {\r\n                return null;\r\n            }\r\n\r\n            return manifest;\r\n        },\r\n\r\n        // Returns whether the current context is running in the extension background\r\n        isBackgroundContext: function (): boolean {\r\n            var loc = window.location.href;\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                if (/^ms-browser-extension/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // Modern chrome does define window.browser so we need to re-check\r\n            if (window.chrome && window.chrome.extension) {\r\n                if (/^chrome/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Gets the current time\r\n        getCurrentTime: function (): number {\r\n            return Math.round(new Date().getTime() / 1000.0);\r\n        },\r\n\r\n        // Returns true if we are running on Chrome, false otherwise\r\n        isChrome: function (): boolean {\r\n            // Ref: http://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome/13348618\r\n            return this.getBrowserName() === 'Chrome' && window.navigator.vendor.indexOf('Google') > -1;\r\n        },\r\n\r\n        // browserVersion: undefined,\r\n        getBrowserAndVersion: function () {\r\n            if (!this.browserVersion) {\r\n                const checkUserAgentForBrowser = (browser: string) => {\r\n                    // userAgent provides better version but may be limited in future so fallback to userAgentData if userAgent fails\r\n                    const regex = new RegExp(`(?<browser>${browser})/(?<version>[0-9.]+)`, 'i');\r\n                    const browserMatch = window.navigator.userAgent.match(regex);\r\n                    if (browserMatch && browserMatch.groups) {\r\n                        return browserMatch.groups;\r\n                    }\r\n\r\n                    if ((window.navigator as any).userAgentData) {\r\n                        const brands: Array<{ brand: string; version: string }> = (window.navigator as any).userAgentData.brands;\r\n                        const match = brands.find((entry) => entry.brand.match(new RegExp(browser, 'i')));\r\n                        if (match) {\r\n                            return { browser: match.brand, version: match.version };\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // order matters here as some browsers may include others to appear as another browser, such as Chrome with Safari\r\n                // or Edge based on Chromium including Chrome so more specific  needs to be checked first\r\n                const orderedBrowserMatches = ['OPe?R', 'Edge?', 'Chrome', 'Safari', 'Firefox'];\r\n                for (const browser of orderedBrowserMatches) {\r\n                    const browserVersion = checkUserAgentForBrowser(browser);\r\n                    if (browserVersion) {\r\n                        this.browserVersion = browserVersion;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.browserVersion;\r\n        },\r\n\r\n        // Returns the name of the current browser (Chrome or Edge)\r\n        getBrowserName: function (): string {\r\n            const browserVersion = this.getBrowserAndVersion();\r\n            return browserVersion ? browserVersion.browser : 'Chrome';\r\n        },\r\n\r\n        // Following code is required since Edge doesn't support \"__MSG_@@bidi_dir__\" in RS1\r\n        isRTL: function (): boolean {\r\n            var uiLang = BrowserHandler.i18n.getUILanguage();\r\n            return /^ar/i.test(uiLang) || /^fa/i.test(uiLang) || /^he/i.test(uiLang) ? true : false;\r\n        },\r\n\r\n        // Set the pop up icon\r\n        setIcon: function (iconPath: any): void {\r\n            BrowserHandler.browserAction.setIcon({\r\n                path: iconPath,\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport default (window as any).Utilities;\r\n","import angular from 'angular';\r\nimport ariaTelemetry from './ariaTelemetry.service';\r\nimport telemetry from './telemetry.service';\r\n\r\nexport default angular\r\n    .module('app.diagnostics', [])\r\n    .service('telemetry', ['$injector', 'ariaTelemetry', telemetry])\r\n    .service('ariaTelemetry', ['$window', ariaTelemetry])\r\n    .name;\r\n\r\n","import Utilities from '../common/utilities';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport angular from 'angular';\r\nimport constants from '../common/constants';\r\nimport {AWTLogManager} from '@aria/webjs-sdk';\r\n\r\nexport default function telemetry($injector, ariaTelemetry) {\r\n    var telemetryProviders = [ariaTelemetry];\r\n\r\n    var addCustomProperties = async function (properties) {\r\n        var userService = $injector.get('userService');\r\n\r\n        // Append app specific properties\r\n        if (Utilities.isUndefinedOrNull(properties)) {\r\n            properties = {};\r\n        }\r\n\r\n        properties.pii = [];\r\n        var manifest = Utilities.getManifest();\r\n        if (manifest) {\r\n            properties.appVersion = manifest.version;\r\n        }\r\n\r\n        // Get UI language\r\n        var language = BrowserHandler.i18n.getUILanguage();\r\n        if (Utilities.isNotUndefinedOrNull(language)) {\r\n            properties.language = language;\r\n        }\r\n\r\n        // Add AppInfo.Name for GDPR T3 export\r\n        properties['AppInfo.Name'] = constants.APPINFO_NAME;\r\n        // Add user info properties\r\n        var userType = await userService.getUserType();\r\n        var semanticContext = AWTLogManager.getSemanticContext();\r\n\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        var userInfo = await userService.getUserInfo(userType);\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        // userInfo properties - cid from MSA\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.cid)) {\r\n            properties.cid = userInfo.cid;\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.cid);\r\n            properties['UserInfo.IdType'] = constants.IDTYPE.MSACID;\r\n        }\r\n\r\n        // userInfo properties - features (from ExP treatment assignment)\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.features)) {\r\n            properties.experimentFeatures = userInfo.features;\r\n        }\r\n\r\n        // PII identity properties - puid from O365\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.puid)) {\r\n            properties.pii.push({type: constants.TELEMETRY.PII_TYPE.IDENTITY, name: 'puid', value: userInfo.puid});\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.puid);\r\n            properties['UserInfo.IdType'] = constants.IDTYPE.ORGIDPUID;\r\n        }\r\n\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.tid)) {\r\n            properties['UserInfo.OMSTenantId'] = userInfo.tid;\r\n        }\r\n\r\n        return properties;\r\n    };\r\n\r\n    // Parses correctly the value of setting\r\n    // Returns undefined if the value cannot be parsed.\r\n    //\r\n    // NOTE: Cannot import this from editorUtils as it would\r\n    // create a DI loop.\r\n    var readSettingValueOrUndefined = function (settings, settingName) {\r\n        if (!settings[settingName]) {return undefined}\r\n\r\n        var storedSetting = JSON.parse(settings[settingName]);\r\n\r\n        if (storedSetting.value === undefined) {return undefined}\r\n\r\n        return JSON.parse(storedSetting.value);\r\n    };\r\n\r\n    var getEnabledSettingFromStorage = function () {\r\n        var $q = $injector.get('$q');\r\n        var storage = $injector.get('storage');\r\n        var deferred = $q.defer();\r\n\r\n        storage.get(['telemetry_enabled', 'enableTelemetry']).then(function (result) {\r\n            deferred.resolve(\r\n                Utilities.isUndefinedOrNull(result)\r\n                    || readSettingValueOrUndefined(result, 'enableTelemetry') === true\r\n                    || Utilities.isUndefinedOrNull(result.telemetry_enabled)\r\n                    || result.telemetry_enabled === true\r\n                    ? true : false);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    var setEnabledSettingInStorage = function (enabled) {\r\n        var storage = $injector.get('storage');\r\n        storage.set({\r\n            'telemetry_enabled': enabled,\r\n            'enableTelemetry': JSON.stringify(\r\n                {\r\n                    value: JSON.stringify(enabled),\r\n                    lastUpdate: Date.now(),\r\n                    manualOverride: false\r\n                }\r\n            ),\r\n        });\r\n    };\r\n\r\n    var service = {\r\n        // Get telemetry setting from storage\r\n        getEnabledSetting: function () {\r\n            return getEnabledSettingFromStorage();\r\n        },\r\n\r\n        // Set telemetry setting from storage\r\n        setEnabledSetting: function (enabled) {\r\n            // App Insights workaround: send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.SET_DISABLED,\r\n                    enabled: enabled\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            // Cache setting in local storage\r\n            setEnabledSettingInStorage(enabled);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                telemetryProviders[i].setEnabledSetting(enabled);\r\n            }\r\n        },\r\n\r\n        // Use to track custom application events and sends to application insights\r\n        trackEvent: async function (eventName, properties, measurements) {\r\n            if (angular.isUndefined(eventName) || !angular.isString(eventName)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_EVENT,\r\n                    eventName: eventName,\r\n                    properties: properties,\r\n                    measurements: measurements\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackEvent(eventName, propertiesToTrack, measurements);\r\n            }\r\n\r\n        },\r\n\r\n        // Use to track trace messages (ie. logging/diagnostics info) and sends to application insights\r\n        trackTrace: async function (message, properties) {\r\n            if (angular.isUndefined(message) || !angular.isString(message)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_TRACE,\r\n                    message: message,\r\n                    properties: properties\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackTrace(message, propertiesToTrack);\r\n            }\r\n        }\r\n    };\r\n\r\n    // return the local instance when called\r\n    return service;\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './telemetry.service';\r\nimport constants from '../common/constants';\r\nimport {AWTEventProperties} from '@aria/webjs-sdk';\r\n\r\nexport default function ariaTelemetry($window) {\r\n    var addEventProperties = function (eventProperties, properties) {\r\n        if (Utilities.isUndefinedOrNull(eventProperties) || Utilities.isUndefinedOrNull(properties)) {\r\n            return;\r\n        }\r\n\r\n        // Obfuscate pii properties out and remove\r\n        if (!Utilities.isUndefinedOrNull(properties.pii)) {\r\n            for (var i = 0; i <= properties.pii.length - 1; ++i) {\r\n                eventProperties.setProperty(properties.pii[i].name, properties.pii[i].value, properties.pii[i].type);\r\n            }\r\n            delete properties.pii;\r\n        }\r\n\r\n        // Add rest of properties\r\n        for (var property in properties) {\r\n            if (properties.hasOwnProperty(property)) {\r\n                eventProperties.setProperty(property, properties[property]);\r\n            }\r\n        }\r\n    };\r\n\r\n    var enabledSetting = true;\r\n\r\n    this.setEnabledSetting = function (enabled) {\r\n        enabledSetting = enabled;\r\n    };\r\n\r\n    this.trackEvent = function (eventName, properties, measurements) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        // ARIA: Bug when dots are in event name; replace with underscores\r\n        eventName = eventName.replace(/\\./g, '_');\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + eventName);\r\n        addEventProperties(eventProperties, properties);\r\n        addEventProperties(eventProperties, measurements);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n\r\n    this.trackTrace = function (message, properties) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + message);\r\n        eventProperties.setProperty('severity', message);\r\n        addEventProperties(eventProperties, properties);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n}\r\n","import BrowserHandler from '../common/browserHandler';\r\n\r\n('use strict');\r\n\r\nfunction promised(proc: any): any {\r\n    return function (...args: ((err: any, ...results: unknown[]) => void)[]): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            function callback(...results: unknown[]): void {\r\n                return resolve(...results);\r\n            }\r\n\r\n            args.push(callback);\r\n            proc.call(this, ...args);\r\n        });\r\n    };\r\n}\r\n\r\nasync function filterNeeded(permissions: string | string[]): Promise<string[]> {\r\n    if (!Array.isArray(permissions)) {\r\n        permissions = [permissions];\r\n    }\r\n\r\n    var granted = await promised(BrowserHandler.permissions.getAll)();\r\n    console.debug(`permissions granted: ${JSON.stringify(granted)}`);\r\n\r\n    return permissions.filter((permission: string) => {\r\n        return !granted.permissions.includes(permission);\r\n    });\r\n}\r\n\r\nexport function checkPermission(requested: string | string[], log: { trackEvent: Function } | null = null): Promise<boolean> {\r\n    if (!Array.isArray(requested)) {\r\n        requested = [requested];\r\n    }\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            var permissions = await filterNeeded(requested);\r\n            if (!permissions.length) {\r\n                return resolve(true);\r\n            }\r\n\r\n            var result = await promised(BrowserHandler.permissions.contains)({ permissions });\r\n            console.debug(`Granted permissions ${result === true ? '' : 'do not'} include ${permissions}`);\r\n            if (result) {\r\n                return resolve(result);\r\n            }\r\n            var granted = await promised(BrowserHandler.permissions.request)({ permissions });\r\n\r\n            console.debug(`Requested permissions ${permissions} ${granted ? 'granted' : 'denied'}`);\r\n            var eventProps: any = {\r\n                granted: !!granted,\r\n                permissions,\r\n            };\r\n\r\n            if (!granted && BrowserHandler.runtime) {\r\n                eventProps.lastError = BrowserHandler.runtime.lastError?.message;\r\n                eventProps.id = BrowserHandler.runtime.id;\r\n            }\r\n\r\n            log?.trackEvent('Permission', eventProps);\r\n            return resolve(!!granted);\r\n        } catch (err) {\r\n            resolve(false);\r\n        }\r\n    });\r\n}\r\n\r\nexport async function preemptivePermissionsRequest(): Promise<void> {\r\n    try {\r\n        var optional = BrowserHandler.runtime.getManifest().optional_permissions;\r\n        await checkPermission(optional);\r\n    } catch (err) {\r\n        console.log(`preemptivePermissionsRequest exception:${err}`);\r\n    }\r\n}\r\n","declare let browser: any;\r\ndeclare let chrome: any;\r\n\r\nvar browserListeners: any[] = [];\r\nvar propertyList = {};\r\n\r\nfunction mergeProperties(target: any, source: any): any {\r\n    for (const [key, value] of Object.entries(source)) {\r\n        if (!target[key]) {\r\n            target[key] = value;\r\n            continue;\r\n        }\r\n\r\n        if (typeof value !== typeof target[key]) {\r\n            console.log(`skipping ${key} due to conflicting types`);\r\n            continue;\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            target[key] = target[key].concat(value);\r\n            continue;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            target[key] = mergeProperties(target[key], value);\r\n            continue;\r\n        }\r\n        target[key] = value;\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\nexport default (function (): any {\r\n    var browserHandler = ((): any => {\r\n        if (typeof browser === 'object') {\r\n            var edgeBrowser = Object.create(browser);\r\n\r\n            edgeBrowser.notifications = {\r\n                clear: function (notificationId: string, callback: (wasCleared: boolean) => void): void {\r\n                    // Invoke callback with wasCleared == false\r\n                    callback(false);\r\n                },\r\n                create: function (\r\n                    notificationId: string,\r\n                    options: chrome.notifications.NotificationOptions,\r\n                    callback: (notificationId: string) => void\r\n                ): void {\r\n                    // Use window alert dialog to display notification message\r\n                    if (typeof options !== 'undefined' && options !== null) {\r\n                        // Only show when priority is 1 or 2\r\n                        if (typeof options.priority !== 'undefined' && options.priority !== null && options.priority > 0) {\r\n                            window.alert(options.message);\r\n                        }\r\n                    }\r\n\r\n                    // Invoke callback with notification id\r\n                    callback(notificationId);\r\n                },\r\n                onButtonClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n                onClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n            };\r\n\r\n            edgeBrowser.runtime = {\r\n                getPlatformInfo: function (callback: (platformInfo: chrome.runtime.PlatformInfo) => void): void {\r\n                    // Does not execute the callback function\r\n                    // Not implemented\r\n                },\r\n            };\r\n        } else if (typeof chrome === 'object') {\r\n            return Object.create(chrome);\r\n        }\r\n    })();\r\n\r\n    // when running in tests, provide override the necessary functions\r\n    if ((window as any).jasmine) {\r\n        const browserMock = {\r\n            mock: true,\r\n            browserAction: {\r\n                setIcon: function (icon: string): void {},\r\n            },\r\n            extension: {\r\n                getURL: function (name: any): string {\r\n                    return '';\r\n                },\r\n            },\r\n            i18n: {\r\n                getUILanguage: function (name: any, callback: any): string {\r\n                    return '';\r\n                },\r\n                getMessage: function (): string {\r\n                    return '';\r\n                },\r\n            },\r\n            runtime: {\r\n                onMessage: {\r\n                    addListener: function (listener: any): any {\r\n                        browserListeners.push(listener);\r\n                    },\r\n                    removeListener: function (listener: any): void {\r\n                        browserListeners.splice(browserListeners.indexOf(listener), 1);\r\n                    },\r\n                },\r\n                sendMessage: function (message: any): any {\r\n                    for (let i = 0; i < browserListeners.length; ++i) {\r\n                        browserListeners[i](message);\r\n                    }\r\n                },\r\n                id: 'ndjpnladcallmjemlbaebfadecfhkepb',\r\n            },\r\n            storage: {\r\n                local: {\r\n                    get: function (name: string, callback: (arg0: { [x: number]: any }) => void): any {\r\n                        callback({\r\n                            [name]: (propertyList as any)[name],\r\n                        });\r\n                    },\r\n\r\n                    set: function (data: { [x: string]: any; hasOwnProperty: (arg0: string) => any }): void {\r\n                        for (const key in data) {\r\n                            if (data.hasOwnProperty(key)) {\r\n                                (propertyList as any)[key] = /*JSON.stringify*/ data[key];\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    remove: function (name: string | number, callback: (arg0: any) => void): void {\r\n                        delete (propertyList as any)[name];\r\n                        callback(propertyList);\r\n                    },\r\n\r\n                    clear: function (name: any, callback: any): void {\r\n                        propertyList = {};\r\n                    },\r\n                },\r\n            },\r\n            tabs: {\r\n                create: function (createProperties: any, callback: (arg0: {}) => void): void {\r\n                    if (callback) callback({});\r\n                },\r\n            },\r\n        };\r\n        browserHandler = mergeProperties(browserHandler || {}, browserMock);\r\n        if (!(window as any).chrome) {\r\n            (window as any).chrome = browserHandler;\r\n        }\r\n    }\r\n\r\n    if (!(window as any).BrowserHandler) {\r\n        (window as any).BrowserHandler = browserHandler;\r\n    }\r\n\r\n    return browserHandler;\r\n})();\r\n","import angular from 'angular';\r\nimport protectedResourceInterceptor from './protectedResourceInterceptor';\r\nimport userService from './user.service';\r\nimport msidUserService from './msidUser.service';\r\nimport msaUserService from './msaUser.service';\r\nimport o365UserService from './o365User.service';\r\nimport '../common';\r\n\r\nexport default angular\r\n    .module('app.user', [])\r\n    .config(['$httpProvider', '$provide', appUser])\r\n    .factory('protectedResourceInterceptor', ['$q', '$log', '$injector', protectedResourceInterceptor])\r\n    .service('msaUserService', ['$log', '$injector', msaUserService])\r\n    .service('o365UserService', ['$log', '$injector', 'notification', o365UserService])\r\n    .service('msidUserService', ['$log', '$injector', 'notification', msidUserService])\r\n    .factory('userService', ['$q', '$log', '$injector', 'storage', 'notification', 'msaUserService', 'o365UserService', 'msidUserService', userService])\r\n    .name;\r\n\r\nfunction appUser($httpProvider, $provide) {\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('protectedResourceInterceptor');\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './user.service';\r\nimport constants from '../common/constants';\r\n\r\n\r\nexport default function protectedResourceInterceptor($q, $log, $injector) {\r\n    var userService = $injector.get('userService');\r\n\r\n    return {\r\n        request: function (config) {\r\n            var deferred = $q.defer();\r\n\r\n            if (Utilities.isUndefinedOrNull(config) || Utilities.isUndefinedOrNull(config.headers)) {\r\n                $log.error('protectedResourceInterceptor.request: http request config is null or undefined');\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var userType = config.headers['X-UserType'];\r\n\r\n            // Only apply http config changes to requests that have custom header\r\n            if (Utilities.isUndefinedOrNull(userType)) {\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var resource = config.headers['X-Resource'];\r\n\r\n            // Remove the custom header; no longer needed\r\n            delete config.headers['X-Resource'];\r\n            delete config.headers['X-UserType'];\r\n            userService.acquireToken(userType, config.url, resource).then(token => {\r\n                // Validate userType within acquireToken method\r\n                if (!Utilities.isUndefinedOrNull(token)) {\r\n                    config.headers.Authorization = 'Bearer ' + token;\r\n                }\r\n                else {\r\n                    $log.warn(`failed to get auth token for type:${userType} url: ${config.url}, resource ${resource}`);\r\n                }\r\n                deferred.resolve(config);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n        responseError: function (response) {\r\n            if (response && response.status === 401) {\r\n                if (Utilities.isNotUndefinedOrNull(response.config) &&\r\n                    (response.config.url === constants.O365CONFIG.SHAREPOINT_URL || response.config.url === constants.O365CONFIG.PHOTO_URL)) {\r\n                    // Don't clear the token if the request is made to get the sharepoint site url or the user photo.\r\n                    return $q.reject(response);\r\n                }\r\n\r\n                userService.clearToken();\r\n            }\r\n\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msaUserService($log, $injector) {\r\n    this.type = constants.USER_TYPE.MSA;\r\n    this.type = constants.USER_SERVICE_TYPE.MSA;\r\n    this.userType = constants.USER_TYPE.MSA;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.MSACONFIG.URL,\r\n            'params': {\r\n                'client_id': constants.MSACONFIG.CLIENT_ID,\r\n                'client_secret': constants.MSACONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.MSACONFIG.REDIRECT_URI\r\n            },\r\n            'resource': constants.ONEDRIVE.INSTANCE,\r\n            'loginUrl': constants.MSACONFIG.INSTANCE + '?response_type=code&client_id=' + constants.MSACONFIG.CLIENT_ID + '&redirect_uri=' + constants.MSACONFIG.REDIRECT_URI + '&scope=' + constants.MSACONFIG.SCOPE,\r\n            'logoutUrl': constants.MSACONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.MSACONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.RECENTS.ONEDRIVE_ENDPOINT\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (data) {\r\n        return new Promise((resolve, reject) => {\r\n            var userInfo = {\r\n                oneDriveUrl: constants.LINKS.APP.ONEDRIVE\r\n            };\r\n\r\n            var $http = $injector.get('$http');\r\n            var request = {\r\n                method: 'GET',\r\n                url: constants.MSACONFIG.USERINFO_URL,\r\n                headers: {\r\n                    'X-UserType': constants.USER_SERVICE_TYPE.MSA\r\n                }\r\n            };\r\n\r\n            $http(request).then(\r\n                function (response) {\r\n                    var data = response.data;\r\n                    userInfo.email = data.emails.account;\r\n                    userInfo.cid = data.id;\r\n                    resolve(userInfo);\r\n                },\r\n                function () {\r\n                    reject(`msaUser.Service.lookupUserInfo http request failed`);\r\n                });\r\n        });\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        return constants.MSACONFIG.SCOPE;\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function o365UserService($log, $injector, notification) {\r\n    this.type = constants.USER_SERVICE_TYPE.O365;\r\n    this.userType = constants.USER_TYPE.O365;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.O365CONFIG.INSTANCE + 'token',\r\n            'params': {\r\n                'client_id': constants.O365CONFIG.CLIENT_ID,\r\n                'client_secret': constants.O365CONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.O365CONFIG.REDIRECT_URI,\r\n                'resource': constants.O365CONFIG.GRAPH_RESOURCE\r\n            },\r\n            'resource': constants.O365CONFIG.GRAPH_RESOURCE,\r\n            'loginUrl': constants.O365CONFIG.INSTANCE + 'authorize?response_type=code&client_id=' + constants.O365CONFIG.CLIENT_ID + '&redirect_uri=' + constants.O365CONFIG.REDIRECT_URI + '&response_mode=query',\r\n            'logoutUrl': constants.O365CONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.O365CONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.O365CONFIG.MRU_URL + constants.RECENTS.FILTER\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        var resource = this.getConfig().resource;\r\n        if (Utilities.isUndefinedOrNull(endpoint)) {\r\n            return resource;\r\n        }\r\n\r\n        // Return resource from config data.\r\n        for (var configEndpoint in constants.O365CONFIG.ENDPOINTS) {\r\n            if (constants.O365CONFIG.ENDPOINTS.hasOwnProperty(configEndpoint) && endpoint.indexOf(configEndpoint) > -1) {\r\n                resource = constants.O365CONFIG.ENDPOINTS[configEndpoint];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return resource;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (tokenData) {\r\n        var userInfo = getUserProfile(tokenData.id_token);\r\n        const oneDriveUrl = await getOneDriveUrl();\r\n        userInfo.oneDriveUrl = oneDriveUrl;\r\n\r\n        const sharePointUrl = await getSharePointUrl();\r\n        userInfo.sharePointUrl = sharePointUrl || constants.LINKS.APP.SHAREPOINT_DEFAULT;\r\n        return userInfo;\r\n    };\r\n\r\n    async function getOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            clearToken();\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error('0365User.getOneDriveUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getSharePointUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.SHAREPOINT_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_SERVICE_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n            return Promise.reject('No SharePoint info for user');\r\n        }\r\n        catch (reason) {\r\n            $log.error('0365User.getSharePointUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function clearToken() {\r\n        var userService = $injector.get('userService');\r\n        userService.clearToken();\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function getUserProfile(idToken) {\r\n        var user = {};\r\n        var parsedJson = extractIdToken(idToken);\r\n        if (parsedJson && parsedJson.hasOwnProperty('aud')) {\r\n            if (parsedJson.aud.toLowerCase() === constants.O365CONFIG.CLIENT_ID.toLowerCase()) {\r\n                if (parsedJson.hasOwnProperty('upn')) {\r\n                    user.email = parsedJson.upn;\r\n                } else if (parsedJson.hasOwnProperty('email')) {\r\n                    user.email = parsedJson.email;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('puid')) {\r\n                    user.puid = parsedJson.puid;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('tid')) {\r\n                    user.tid = parsedJson.tid;\r\n                }\r\n            } else {\r\n                $log.error('IdToken has invalid aud field');\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function extractIdToken(encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = base64DecodeStringUrlSafe(base64IdToken);\r\n            if (!base64Decoded) {\r\n                this._logstatus('The returned id_token could not be base64 url safe decoded.');\r\n                return null;\r\n            }\r\n\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        } catch (err) {\r\n            $log.error('The returned id_token could not be decoded: ' + err.stack);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        if (window.atob) {\r\n            return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function decodeJwt(jwtToken) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3],\r\n        };\r\n\r\n        return crackedToken;\r\n    }\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msidUserService($log, $injector, notification) {\r\n    const type = constants.USER_SERVICE_TYPE.MSID;\r\n    var userService = undefined;\r\n    // previous app registration also included (are they still needed?)\r\n    // Graph:\r\n    // offline_access, Directory.AccessAsUser.All, User.Read.All\r\n    // SharePoint:\r\n    // MyFiles.Read, MyFiles.Write\r\n    const scopes = 'email openid profile user.read';\r\n    const userInfoUrl = 'https://graph.microsoft.com/v1.0/me/';\r\n    const aadV2Url = new URL('https://login.microsoftonline.com/common/oauth2/').toString();\r\n    const msaOAuthUrl = new URL('https://login.live.com/oauth20_authorize.srf').toString();\r\n    const redirectUri = new URL('nativeclient', aadV2Url).toString();\r\n    const logoutUrl = new URL('v2.0/logoutsession', aadV2Url).toString();\r\n    const authorizeUrl = new URL('v2.0/authorize', aadV2Url).toString();\r\n    const aadClientId = 'e28ff72c-58a5-49ba-8125-42ec264d7cd0'; // newest clientId\r\n    const loginUrl = (() => {\r\n        var loginUrl = new URL(authorizeUrl);\r\n        loginUrl.search = createParams({prompt: 'select_account'});\r\n        return loginUrl.toString();\r\n    })();\r\n\r\n    function getUserService() {\r\n        if (!userService) {\r\n            userService = $injector.get('userService');\r\n        }\r\n\r\n        return userService;\r\n    }\r\n\r\n    function createParams(additionalParams) {\r\n        const defaultParams = {\r\n            'client_id': aadClientId,\r\n            'response_type': 'id_token token',\r\n            'redirect_uri': redirectUri,\r\n            'scope': scopes,\r\n            'response_mode': 'fragment',\r\n        };\r\n        const params = new URLSearchParams(Object.assign({}, defaultParams, additionalParams));\r\n        return params.toString();\r\n    }\r\n\r\n    // Could we use chrome.identity.launchWebAuthFlow()\r\n    // with redirect url https://ndjpnladcallmjemlbaebfadecfhkepb.chromiumapp.org/response?\r\n    // see https://developer.chrome.com/extensions/identity#method-launchWebAuthFlow\r\n    function getConfig() {\r\n        return {\r\n            'loginUrl': loginUrl,\r\n            'logoutUrl': logoutUrl,\r\n            'photoUrl': 'https://graph.microsoft.com/beta/me/photo/$value',\r\n            'userInfoUrl': userInfoUrl,\r\n            'documentsUrl': 'https://graph.microsoft.com/v1.0/me/drive/recent'\r\n        };\r\n    }\r\n\r\n    async function handleLogin() {\r\n        const msaParams = {\r\n            'url': msaOAuthUrl,\r\n            'aadredir': 1,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        const aadParams = {\r\n            'url': authorizeUrl,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        // TODO: Not sure if aadv2 requires dual stack approach where we try one endpoint and then another but if\r\n        // so we then need to determine if we should start with AAD or MSA but default to MSA since it can\r\n        // handle sign up in case they want to create a new account for overview on how to handle dual stack\r\n        // select_account see https://identitydocs.azurewebsites.net/static/overview/user_discovery.html\r\n        const authEndpointParams = [];\r\n        // authEndpointParams.push(msaParams); // not adding until app configuration is updated to support msa\r\n        authEndpointParams.push(aadParams);\r\n\r\n        var accountId = undefined;\r\n        for (var endpointParams of authEndpointParams) {\r\n            var loginUrl = new URL(endpointParams.url);\r\n            delete endpointParams.url;\r\n\r\n            if (accountId) {\r\n                endpointParams.set('login_hint', accountId);\r\n            }\r\n            loginUrl.search = createParams(endpointParams);\r\n            var response = await getUserService().navigateToAuthEndpoint(loginUrl.toString(), type);\r\n            if (!response.error || response.error === 'aad_auth') {\r\n                return;\r\n            }\r\n\r\n            if (response.username) {\r\n                accountId = response.username;\r\n            }\r\n        }\r\n    }\r\n\r\n    async function lookupUserInfo(token) {\r\n        const infoFuncs = [\r\n            fetchUserInfo(),\r\n            fetchOneDriveUrl(),\r\n            fetchOneDriveQuota()\r\n        ];\r\n        var results = await Promise.all(infoFuncs);\r\n\r\n        return results.reduce((previous, current) => {\r\n            return Object.assign(previous, current);\r\n        });\r\n    }\r\n\r\n    function deleteMetaDataTags(object) {\r\n        for (const prop in object) {\r\n            if (object.hasOwnProperty(prop)) {\r\n                if (prop.match(/^@odata/i)) {\r\n                    delete object[prop];\r\n                }\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n    async function fetchUserInfo() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: userInfoUrl,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        var userInfo = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            userInfo = deleteMetaDataTags(response);\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchUserInfo failed: ${reason}`);\r\n        }\r\n\r\n        return userInfo;\r\n    }\r\n\r\n    async function fetchOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var data = await getUserService().httpRequest(request);\r\n            if (data.webUrl) {\r\n                return {'oneDriveUrl': data.webUrl};\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error(`msidUser.fetchOneDriveUrl failed: ${JSON.stringify(reason)}`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // accounts.microsoft.com makes a call to\r\n    // https://account.microsoft.com/services/api/subscriptions?X-Requested-With=XMLHttpRequest&excludeWindowsStoreInstallOptions=false&_=1571422283464\r\n    // which seems to get consumer subscriptions, maybe another option?\r\n    async function fetchSubscriptionInfo(userType) {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/licenseDetails',\r\n            headers: {\r\n                'X-UserType': userType\r\n            }\r\n        };\r\n\r\n        var licenses = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n\r\n            for (const license of response.value.values()) {\r\n                const sku = license.skuPartNumber.toLowerCase();\r\n                var plans = license.servicePlans.filter(plan => plan.provisioningStatus === 'Success').map(plan => plan.servicePlanName.toLowerCase());\r\n                licenses[sku] = plans;\r\n            }\r\n            return {'licenses': licenses};\r\n        }\r\n        catch (reason) {\r\n            $log.error(`msidUser.fetchSubscriptionInfo failed: ${JSON.stringify(reason)}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function fetchOneDriveQuota() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/drive',\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            var quota = parseInt(response.quota.total) / (1024 * 1024 * 1024);\r\n            quota = Math.round(quota * 100) / 100;\r\n            $log.info(`OneDrive quota: ${JSON.stringify(response.quota, null, '\\t')} capacity: ${quota}GB`);\r\n            return {'driveQuota': response.quota.total, 'driveQuotaString': `${quota}GB`};\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchOneDriveQuota failed: ${reason}`);\r\n        }\r\n    }\r\n\r\n    function getResourceForEndpoint(endpoint) {\r\n        if (!endpoint) {\r\n            return scopes;\r\n        }\r\n\r\n        const endpointResources = {\r\n            'https://graph.microsoft.com': {\r\n                '/v1.0/me/': scopes,\r\n                '/v1.0/me/drive/recent': 'Files.ReadWrite.All' //'https://graph.microsoft.com/Files.ReadWrite.All'\r\n            },\r\n            'https://nleditor.osi.office.net':\r\n            {\r\n                '/NlEditor/': 'https://nleditor.osi.office.net/NlEditor/instrumentation.write'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const url = new URL(endpoint);\r\n            if (!endpointResources.hasOwnProperty(url.origin)) {\r\n                return scopes;\r\n            }\r\n            const paths = endpointResources[url.origin];\r\n            const urlPath = url.pathname;\r\n\r\n            var match = Object.keys(paths).reduce((previous, current) => {\r\n                if (urlPath.startsWith(current) && current.length > previous.length) {\r\n                    return current;\r\n                } else {\r\n                    return previous;\r\n                }\r\n            });\r\n\r\n            return paths[match];\r\n        }\r\n        catch (reason) {\r\n            $log.warning(`msidUser.Service threw an exception: ${reason}`);\r\n            return scopes;\r\n        }\r\n    }\r\n\r\n    async function requestAccessToken(resource, userInfo) {\r\n        var additionalParams = {scope: resource, response_type: 'token'};\r\n        if (userInfo && userInfo.email) {\r\n            // additionalParams['domain_hint'] = organizations;\r\n            additionalParams['login_hint'] = userInfo.email;\r\n        }\r\n        var params = createParams(additionalParams);\r\n        var url = new URL(authorizeUrl);\r\n\r\n        url.search = params.toString();\r\n        var result = await getUserService().navigateToAuthEndpoint(url.href, type, true);\r\n\r\n        if (!result || !result.access_token) {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.info(`failed to get token from iframe for resource ${resource}`);\r\n            return Promise.reject(`unable to retrieve result from ${url.href}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        getConfig: getConfig,\r\n        getResourceForEndpoint: getResourceForEndpoint,\r\n        // handleLogin: handleLogin,\r\n        lookupUserInfo: lookupUserInfo,\r\n        requestAccessToken: requestAccessToken\r\n    };\r\n}\r\n","import BrowserHandler from '../common/browserHandler';\r\nimport constants from '../common/constants';\r\nimport Utilities from '../common/utilities';\r\n\r\n// ppe = 'https://nleditor.osi.officeppe.net/NLEditor/BrowserExtension/V1'\r\nconst FlightingUrl = 'https://nleditor.osi.office.net/NLEditor/api/V1/BrowserExtension';\r\n\r\nexport default function userService($q, $log, $injector, storage, notification, msaUserService, o365UserService, msidUserService) {\r\n    function authMessageListener(message, sender, response) {\r\n        switch (message.activity) {\r\n            case constants.ACTIVITY.LOGOUT.NAME:\r\n                logout().then(() => {\r\n                    response();\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHENTICATION.NAME:\r\n                login(message.type).then(result => {\r\n                    response(result);\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHORIZATION.NAME:\r\n                {\r\n                    // This handler can probably go away if it's determined that we don't\r\n                    // need to call authenticate for any responses that aren't our own\r\n                    if (sender.id === BrowserHandler.runtime.id && message.close) {\r\n                        if (sender.tab && sender.tab.id) {\r\n                            BrowserHandler.tabs.remove(sender.tab.id);\r\n                        }\r\n                        delete message.close;\r\n                    }\r\n\r\n                    authorize(unpackStateParam(message)).then(() => {\r\n                        response();\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n            case constants.ACTIVITY.REQUEST_TOKEN.NAME:\r\n                {\r\n                    navigateToAuthEndpoint(message.data.url, message.data.type, message.data.inIFrame).then(token => {\r\n                        response(token);\r\n                    });\r\n                    return true;\r\n                }\r\n            default:\r\n                {\r\n                    return;\r\n                }\r\n        }\r\n    }\r\n\r\n    // This module can be loaded by pages other than the background page so only\r\n    // handle these messages on the background page\r\n    if (Utilities.isBackgroundContext()) {\r\n        BrowserHandler.runtime.onMessage.addListener(authMessageListener);\r\n    }\r\n\r\n    async function acquireToken(userOrServiceType, endpoint, resource) {\r\n        var userService = {};\r\n        userService = await getServiceProvider(userOrServiceType);\r\n\r\n        if (!userService) {\r\n            $log.error('userService.acquireToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        if (!resource && userService.getResourceForEndpoint) {\r\n            resource = userService.getResourceForEndpoint(endpoint);\r\n        }\r\n\r\n        var token = {};\r\n        try {\r\n            token = await getAccessToken(endpoint, resource);\r\n\r\n            // if found cached token for resource/scope and not expired, return it\r\n            if (token && token.access_token && !isTokenExpired(token.expires_on)) {\r\n                $log.debug(`Using cached token with resource:'${resource}'${endpoint ? ' for ' + endpoint : ''} `);\r\n                return token.access_token;\r\n            }\r\n\r\n            token = await requestAccessToken(userService, resource);\r\n\r\n            if (token) {\r\n                saveTokens(userService, endpoint, token);\r\n            } else {\r\n                return Promise.reject('No tokens available');\r\n            }\r\n        }\r\n        catch (reason) {\r\n            $log.error(`userService.acquireToken - failed. reason: ${reason}, userType: ${userOrServiceType}, endpoint: ${endpoint}, resource: ${resource}`);\r\n        }\r\n\r\n        if (!token || !token.access_token || !token.expires_on || isTokenExpired(token.expires_on)) {\r\n            return null;\r\n        }\r\n\r\n        return token.access_token;\r\n    }\r\n\r\n    function getFunctionName() {\r\n        var stack = Error().stack;\r\n        if (stack.length < 3) {\r\n            return;\r\n        }\r\n        var caller = stack.split('\\n')[2];\r\n        var match = caller.match(/^\\s*at\\s*(\\w*)/);\r\n        if (!match || match.length < 2) {\r\n            return;\r\n        }\r\n\r\n        return match[1];\r\n    }\r\n\r\n    async function httpRequest(request) {\r\n        if (!request) {\r\n            return Promise.reject('Invalid Request');\r\n        }\r\n\r\n        var stack = new Error().stack;\r\n        var result = new Promise((resolve, reject) => {\r\n            const $http = $injector.get('$http');\r\n\r\n            $http(request).then(\r\n                (response) => {\r\n                    resolve(response.data);\r\n                },\r\n                (response) => {\r\n                    reject(`httpRequest failed for url: ${request.url} reason: ${response.statusText} stack:\\n ${stack}`);\r\n                });\r\n\r\n        });\r\n\r\n        return (await result);\r\n    }\r\n\r\n    async function acquireTokenFromCode(userService, code) {\r\n        if (!userService) {\r\n            $log.error('userService.acquireTokenFromCode - Invalid type');\r\n            Promise.reject('Invalid userService type');\r\n            return;\r\n        }\r\n\r\n        var config = userService.getConfig();\r\n        config.params.grant_type = constants.OAUTH.AUTH_CODE;\r\n        config.params.code = code;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        const accessToken = await httpRequest(request);\r\n        await saveTokens(userService, userService.getConfig().resource, accessToken);\r\n        // is all the above needed or would protectedResourceInterceptor call into acquireToken\r\n        // if the userType was just added to the header here?\r\n        await lookupUserInfo(userService, accessToken);\r\n        return accessToken.access_token;\r\n    }\r\n\r\n    async function getRefreshToken() {\r\n        return getIdentityProperty('refresh_token');\r\n    }\r\n\r\n    async function refreshAccessToken(userService, resource, refresh_token) {\r\n        if (!userService) {\r\n            $log.error('userService.refreshAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        var token = {};\r\n        var config = userService.getConfig();\r\n\r\n        config.params.grant_type = constants.OAUTH.REFRESH_TOKEN;\r\n        config.params.resource = resource;\r\n        config.params.refresh_token = refresh_token;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        token = await httpRequest(request);\r\n        return token;\r\n    }\r\n\r\n    async function requestAccessToken(userService, resource) {\r\n        if (!userService) {\r\n            $log.error('userService.requestAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        // if there's a refresh token available (code grant only) attempt to renew it\r\n        // if there is no refresh token then it's an implicit flow which just attempts\r\n        // to get a new access token\r\n        const refreshToken = await getRefreshToken();\r\n        if (refreshToken) {\r\n            return refreshAccessToken(userService, resource, refreshToken);\r\n        }\r\n\r\n        const userType = await getUserType();\r\n        var userInfo = await getUserInfo(userType);\r\n        if (userService.requestAccessToken) {\r\n            var result = await userService.requestAccessToken(resource, userInfo);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async function authorize(request) {\r\n        const serviceType = request.type;\r\n        var userType = undefined;\r\n        var userService = await getServiceProvider(serviceType);\r\n        var result = false;\r\n        if (!userService) {\r\n            $log.error('userService.authenticate - Invalid type');\r\n            return;\r\n        }\r\n\r\n        if (request.code) {\r\n            userType = serviceType.userType;\r\n            try {\r\n                var token = await acquireTokenFromCode(userService, request.code);\r\n                result = !!token;\r\n\r\n            }\r\n            catch (reason) {\r\n                if (userType === constants.USER_TYPE.O365) {\r\n                    notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            if (request.id_token) {\r\n                userType = await setUserType(request.id_token);\r\n            }\r\n            if (request.access_token) {\r\n                await saveTokens(userService, userService.getConfig().userInfoUrl, request);\r\n                if (!userType) {\r\n                    userType = await getUserType();\r\n                }\r\n                await lookupUserInfo(userService, request.id_token);\r\n            }\r\n            result = userType !== constants.USER_TYPE.NONE;\r\n        }\r\n        if (request.error) {\r\n            if (request.error === 'interaction_required') {\r\n                login(await getUserType(), false);\r\n            } else {\r\n                $log.error(`userService.authenticate - authentication returned error: ${request.error} description: ${request.error_description} request: ${JSON.stringify(request)}`);\r\n            }\r\n        }\r\n\r\n        $log.trackEvent('Authorization', {'userType': userType, 'serviceType': serviceType, 'succeeded': result});\r\n        return result ? Promise.resolve() : Promise.reject();\r\n    }\r\n\r\n    async function clearToken() {\r\n        return Promise.all([\r\n            storage.remove('accessToken'),\r\n            storage.remove('refreshToken'),\r\n            storage.remove('userInfo'),\r\n            storage.remove('userType'),\r\n            storage.remove('identity'),\r\n        ]);\r\n    }\r\n\r\n    async function getLoginStatus() {\r\n        var result = await storage.get('userType');\r\n\r\n        if (!result.userType) {\r\n            return false;\r\n        }\r\n        try {\r\n            var accessToken = await acquireToken(result.userType);\r\n            return !!accessToken;\r\n        }\r\n        catch (reason) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function isLoggedIn() {\r\n        var storageData = await storage.get(['userType', 'identity']);\r\n        return (storageData.identity && storageData.userType && storageData.userType !== constants.USER_TYPE.NONE /*&& result.accessToken*/);\r\n    }\r\n\r\n    async function getUserType() {\r\n        // Does this still need to be here? every telemetry call\r\n        // calls this which causes us to log back in again\r\n        /*\r\n        var status = await getLoginStatus();\r\n        if (!status) {\r\n            deferred.resolve(constants.USER_TYPE.NONE);\r\n            return deferred.promise;\r\n        }\r\n        */\r\n\r\n        var result = await storage.get('userType');\r\n        return result.userType || constants.USER_TYPE.NONE;\r\n    }\r\n\r\n    async function setUserType(typeOrToken) {\r\n        var userType = '';\r\n        if (Object.values(constants.USER_TYPE).includes(typeOrToken)) {\r\n            userType = typeOrToken;\r\n        } else {\r\n            var tenantInfo = resolveTypeAndTenant(typeOrToken);\r\n            userType = tenantInfo.type;\r\n            delete tenantInfo.type;\r\n\r\n            var tenantEntry = {\r\n                [userType]: tenantInfo\r\n            };\r\n\r\n            var identity = await getStoredIdentity();\r\n\r\n            mergeProperties(identity, tenantEntry);\r\n            await storage.set({identity});\r\n        }\r\n\r\n        if (userType !== constants.USER_TYPE.NONE) {\r\n            await storage.set({'userType': userType});\r\n        }\r\n\r\n        return userType;\r\n    }\r\n\r\n    function unpackStateParam(message) {\r\n        // separate the type from the state param\r\n        if (message.state) {\r\n            message.state = decodeURIComponent(message.state);\r\n        }\r\n        var [state, type, appid] = message.state.split('|');\r\n        if (type) {\r\n            message.type = type;\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    async function navigateToAuthEndpoint(url, type, inIFrame) {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({activity: 'requestToken', data: {url: url, type: type, inIFrame: inIFrame}}, token => {\r\n                    resolve(token);\r\n                });\r\n            } else {\r\n                url = new URL(url);\r\n                const params = url.searchParams;\r\n                for (const param of ['state', 'nonce']) {\r\n                    var value = params.get(param);\r\n                    if (!value) {\r\n                        value = createGuid();\r\n                    }\r\n                    // append the type to ensure the same is used to handle the response\r\n                    if (param === 'state' && type) {\r\n                        value += '|' + type + '|' + constants.APPINFO_NAME;\r\n                    }\r\n\r\n                    params.set(param, value);\r\n                }\r\n\r\n                var frameId = undefined;\r\n                var timeout = undefined;\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function cleanup() {\r\n                    BrowserHandler.runtime.onMessage.removeListener(listener);\r\n                    if (frameId) {\r\n                        var iframe = document.getElementById(frameId);\r\n                        if (iframe) {\r\n                            iframe.parentNode.removeChild(iframe);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // remember the state parameter to unsure the response has the same state\r\n                const state = params.get('state');\r\n                const scope = params.get('scope');\r\n\r\n                $log.info(`loading auth url:${url.href} ${inIFrame ? 'in iframe' : ''}`);\r\n                var info = await getUserInfo();\r\n                if (info && info.email && !params.has('login_hint')) {\r\n                    params.set('login_hint', info.email);\r\n                }\r\n\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function listener(message, sender, response) {\r\n                    if (sender.id !== BrowserHandler.runtime.id) {\r\n                        $log.debug(`auth listener rejected invalid id: ${sender.id}`);\r\n                        return;\r\n                    }\r\n\r\n                    if (message.activity === constants.ACTIVITY.AUTHORIZATION.NAME) {\r\n                        var result = unpackStateParam(message);\r\n\r\n                        if (!result) {\r\n                            $log.error(`userService.listener - auth url:${url} returned null response `);\r\n                            reject(result);\r\n                        }\r\n\r\n                        if (result.state !== state) {\r\n                            $log.warn(`userService.listener - auth url:${url} mismatched state:${result.state}`);\r\n                        }\r\n\r\n                        $log[result.error ? 'error' : 'debug'](`userService.listener - auth response:${JSON.stringify(result)} received from url:${url}`);\r\n\r\n                        if (timeout) {\r\n                            clearTimeout(timeout);\r\n                        }\r\n\r\n                        delete result.activity;\r\n                        cleanup();\r\n                        resolve(result);\r\n                    }\r\n                }\r\n                BrowserHandler.runtime.onMessage.addListener(listener);\r\n\r\n                if (!inIFrame) {\r\n                    BrowserHandler.tabs.create({url: url.toString()});\r\n                } else {\r\n                    params.set('prompt', 'none');\r\n                    frameId = 'authFrame!' + scope;\r\n\r\n                    const iframeAuthDelay = 60000;\r\n                    timeout = setTimeout(() => {\r\n                        $log.warn(`userService.authInFrame timed out waiting for ${url.toString()} after ${iframeAuthDelay} ms`);\r\n                        cleanup();\r\n                        reject('Timed out waiting for response from iFrame');\r\n                    }, iframeAuthDelay);\r\n\r\n                    var iframe = document.getElementById(frameId);\r\n                    if (!iframe) {\r\n                        iframe = document.createElement('iframe');\r\n                        iframe.setAttribute('id', frameId);\r\n                        iframe.style.visibility = \"hidden\";\r\n                        iframe.style.position = \"absolute\";\r\n                        iframe.style.width = iframe.style.height = \"0\";\r\n                        iframe.style.border = \"0\";\r\n                        iframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n\r\n                        document.body.appendChild(iframe);\r\n                        iframe.src = url.toString();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async function login(userType, clear = true) {\r\n        if (clear === true) {\r\n            clearToken();\r\n        }\r\n\r\n        var userService = await getServiceProvider(userType);\r\n        if (userService.handleLogin) {\r\n            return userService.handleLogin();\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        var loginUrl = config['loginUrl'];\r\n        if (!loginUrl) {\r\n            $log.error('userService.login - Invalid type');\r\n            return;\r\n        }\r\n\r\n        return navigateToAuthEndpoint(loginUrl, userService.type);\r\n    }\r\n\r\n    async function logout() {\r\n        const userType = await getUserType();\r\n        var userService = await getServiceProvider(userType);\r\n        clearToken();\r\n        if (userService.handleLogout) {\r\n            await userService.handleLogout();\r\n        } else {\r\n            const config = userService.getConfig();\r\n            var logoutUrl = config['logoutUrl'];\r\n            if (!logoutUrl) {\r\n                $log.error('userService.logout - Invalid type');\r\n                return;\r\n            }\r\n\r\n            var request = {\r\n                method: 'GET',\r\n                url: logoutUrl\r\n            };\r\n\r\n            await httpRequest(request);\r\n        }\r\n\r\n        $log.debug(`userService.logout - ${userType}`);\r\n    }\r\n\r\n    async function getDeviceId() {\r\n        var result = await storage.get('deviceId');\r\n        if (result.deviceId) {\r\n            return result.deviceId;\r\n        }\r\n\r\n        var id = createGuid();\r\n        await storage.set({'deviceId': id});\r\n        return id;\r\n    }\r\n\r\n    async function useAuthNext(toggle) {\r\n        if (typeof toggle !== 'undefined') {\r\n            storage.set({'authNext': {override: toggle}});\r\n        }\r\n\r\n        return checkAuthFlighting({noLogout: true});\r\n    }\r\n\r\n    window.useAuthNext = useAuthNext;\r\n    window.checkTransitionAuth = checkAuthFlighting;\r\n\r\n    // only check once a day\r\n    const transitionAuthInterval = 24 /*hours*/ * 3600 /*seconds per hour*/ * 1000/* millseconds per second*/;\r\n\r\n    async function initCheckTransition() {\r\n        $log.debug('initCheckTransition');\r\n        //check now before setting interval\r\n        await checkAuthFlighting();\r\n        // set the recurring interval to perform the check\r\n        setInterval(checkAuthFlighting, transitionAuthInterval);\r\n    }\r\n\r\n    if (Utilities.isBackgroundContext()) {\r\n        initCheckTransition();\r\n    }\r\n\r\n    async function checkAuthFlighting(options) {\r\n        var now = new Date();\r\n        const checkedTime = now.toUTCString();\r\n        var storageData = await storage.get('authNext');\r\n        now = Math.round(now / 1000);\r\n        var elapsed = 0;\r\n        if (storageData.authNext && storageData.authNext.lastCheck && Utilities.isNotUndefinedOrNull(storageData.authNext.flighted)) {\r\n            elapsed = now - storageData.authNext.lastCheck;\r\n\r\n            if (!(options && options.force === true) && elapsed < transitionAuthInterval && storageData.authNext.flighted) {\r\n                return storageData.authNext.flighted;\r\n            }\r\n        }\r\n\r\n        $log.info(`checkTransitionAuth time:${checkedTime}`);\r\n\r\n        var authNext = await (async () => {\r\n            // Guidance from service is to use deviceId as userId since the userId isn't\r\n            // always available, and would change if they login with a different account.\r\n            // X_UserId needs to be consistent so they don't jump flights but\r\n            // X_CorrelationId isn't required\r\n            const editorService = FlightingUrl;\r\n            var deviceId = await getDeviceId();\r\n            var request = {\r\n                url: editorService,\r\n                method: 'POST',\r\n                accept: 'application/json',\r\n                contentType: 'application/json',\r\n                headers: {\r\n                    // 'X-CorrelationId': deviceId,\r\n                    'X-UserId': deviceId\r\n                },\r\n                data: {\r\n                    AppId: \"OfficeBX_Online\"\r\n                }\r\n            };\r\n\r\n            var result = {};\r\n            try {\r\n                result = await httpRequest(request);\r\n            } catch (error) {\r\n                // eslint-disable-next-line no-debugger\r\n                debugger;\r\n                $log.error(`userService.checkAuthFlighting - Call to editor service failed. error:${JSON.stringify(error)}`);\r\n            }\r\n\r\n            var enabled = false;\r\n            if (result && result.FeatureFlags && result.FeatureFlags.authNext) {\r\n                var authNext = result.FeatureFlags.authNext;\r\n                enabled = typeof authNext === 'string' ? authNext.toLowerCase() === 'true' : !!authNext;\r\n            }\r\n\r\n            $log.info(`editor featureFlags.authNext returned:${enabled}`);\r\n            return enabled;\r\n        })();\r\n\r\n        await storage.set({'authNext': {flighted: authNext, 'lastCheck': now}});\r\n\r\n        // check the override last so the flighting service will still get called as usual\r\n        if (storageData.authNext && Utilities.isNotUndefinedOrNull(storageData.authNext.override)) {\r\n            $log.info(`using authNext override from local storage.`);\r\n            return storageData.authNext.override;\r\n        }\r\n\r\n        var serviceType = await getIdentityProperty('service');\r\n        if (authNext === (serviceType === constants.USER_SERVICE_TYPE.MSID)) {\r\n            // current serviceType and authNext match so return with no change\r\n            return;\r\n        }\r\n\r\n        $log.trackEvent('AuthNext', {elapsed, authNext, serviceType});\r\n\r\n        // logout to force user to login with correct flighted auth\r\n        if (options && !options.noLogout) {\r\n            await logout();\r\n        }\r\n    }\r\n\r\n    async function getLastAuthCheck() {\r\n        if (!window.lastAuthFlightCheck) {\r\n            var result = await storage.get('authNext');\r\n            if (result.lastCheck) {\r\n                window.lastAuthFlightCheck = result.lastCheck;\r\n            }\r\n        }\r\n        return window.lastAuthFlightCheck;\r\n    }\r\n\r\n\r\n    async function getServiceForUserType(userType) {\r\n        // if one serviceType was responsible for logged in identity return it\r\n        var serviceType = await getIdentityProperty('service', userType);\r\n        if (serviceType) {\r\n            return serviceType;\r\n        }\r\n\r\n        // otherwise determine which to use\r\n        serviceType = constants.USER_SERVICE_TYPE.NONE;\r\n        if (await useAuthNext()) {\r\n            return constants.USER_SERVICE_TYPE.MSID;\r\n        }\r\n\r\n        switch (userType) {\r\n            case constants.USER_TYPE.MSA:\r\n                serviceType = constants.USER_SERVICE_TYPE.MSA;\r\n                break;\r\n            case constants.USER_TYPE.O365:\r\n                serviceType = constants.USER_SERVICE_TYPE.O365;\r\n                break;\r\n        }\r\n        return serviceType;\r\n    }\r\n\r\n    async function getServiceProvider(type) {\r\n        var userServiceProvider = null;\r\n        if (!Object.values(constants.USER_SERVICE_TYPE).includes(type)) {\r\n            type = await getServiceForUserType(type);\r\n        }\r\n        // Determine which user service to use and inject\r\n        if (type.indexOf(constants.USER_SERVICE_TYPE.MSA) !== -1) {\r\n            userServiceProvider = msaUserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.O365) !== -1) {\r\n            userServiceProvider = o365UserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.MSID) !== -1) {\r\n            userServiceProvider = msidUserService;\r\n        } else {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.error(`userService.getServiceProvider - Invalid type - ${type}`);\r\n        }\r\n\r\n        return userServiceProvider;\r\n    }\r\n\r\n    async function getStoredIdentity() {\r\n        var result = await storage.get('identity');\r\n        return (result && result.identity) ? result.identity : {};\r\n    }\r\n\r\n    function mergeProperties(target, source) {\r\n        for (var [key, sourceValue] of Object.entries(source)) {\r\n            if (!sourceValue) {\r\n                continue;\r\n            }\r\n\r\n            if (!target[key] || target[key] === \"none\" || sourceValue === \"none\") {\r\n                target[key] = sourceValue;\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue !== typeof target[key]) {\r\n                $log.warn(`skipping ${key} due to conflicting types`);\r\n                continue;\r\n            }\r\n\r\n            if (Array.isArray(sourceValue)) {\r\n                sourceValue.forEach((value) => {\r\n                    var index = target[key].indexOf(value);\r\n                    if (index < 0) {\r\n                        target[key].push(value);\r\n                    }\r\n                });\r\n\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue === 'object') {\r\n\r\n                mergeProperties(target[key], sourceValue);\r\n                continue;\r\n            }\r\n            target[key] = sourceValue;\r\n        }\r\n    }\r\n\r\n    function resolveTypeAndTenant(tokenData) {\r\n        var scopes = tokenData.scopes || tokenData.scope;\r\n        if (scopes && scopes.includes('wl.')) {\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n        var idToken = tokenData.id_token || tokenData;\r\n        if (!idToken) {\r\n            return {type: constants.USER_TYPE.NONE};\r\n        }\r\n\r\n        const tenants = {\r\n            '9188040d-6c67-4c5b-b112-36a304b66dad': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'prod'\r\n            },\r\n            '4925308c-f164-4d2d-bc7e-0631132e9375': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'ppe'\r\n            },\r\n            '72f988bf-86f1-41af-91ab-2d7cd011db47': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'prod', 'domain': 'microsoft.com'\r\n            },\r\n            'f686d426-8d16-42db-81b7-ab578e110ccd': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'ppe', 'domain': 'microsoft.com'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const {header, payload} = parseJwtToken(idToken);\r\n            var result = {['tenant']: payload.tid};\r\n            if (tenants.hasOwnProperty(result.tenant)) {\r\n                var tenantInfo = tenants[result.tenant];\r\n                result = Object.assign(result, tenantInfo);\r\n            } else {\r\n                // everything not included in tenants would be AAD\r\n                result.type = constants.USER_TYPE.O365;\r\n            }\r\n\r\n            return result;\r\n        }\r\n        catch (error) {\r\n            // If it wasn't parsable then it must be an MSA\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n    }\r\n\r\n    function getEndpointBase(endpoint) {\r\n        const url = new URL(endpoint);\r\n        return url.origin;\r\n    }\r\n\r\n    async function saveTokens(userService, endpoint, tokenData) {\r\n        if (tokenData.expires_in && !tokenData.expires_on) {\r\n            tokenData.expires_on = Utilities.getCurrentTime() + Number(tokenData.expires_in);\r\n        }\r\n\r\n        if (!endpoint) {\r\n            $log.error('userService.saveTokens - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        var userType = await getUserType();\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            userType = await setUserType(tokenData);\r\n        }\r\n\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.error('userService.saveTokens - unable to resolve userType');\r\n            return;\r\n        }\r\n\r\n        var scope = decodeURIComponent(tokenData.scope).toLowerCase().split(/[ +]/);\r\n\r\n        // if one of the scopes contains a url, then it is the actual endpoint\r\n        for (const item of scope) {\r\n            var result = item.match(/(^https:\\/\\/[.\\w]*(?:\\S+\\/))/i);\r\n            if (result) {\r\n                endpoint = result[result.index];\r\n                break;\r\n            }\r\n        }\r\n        endpoint = getEndpointBase(endpoint);\r\n        if (tokenData.resource && tokenData.resource !== endpoint) {\r\n            $log.info(`saveTokens ${endpoint} does not match ${tokenData.resource}`);\r\n            endpoint = tokenData.resource;\r\n        }\r\n\r\n        var tokenEntry = {\r\n            [userType]: {\r\n                \"id_token\": tokenData.id_token,\r\n                \"refresh_token\": tokenData.refresh_token,\r\n                \"service\": userService.type,\r\n                \"resources\": {\r\n                    [endpoint]: {\r\n                        \"access_token\": tokenData.access_token,\r\n                        \"expires_in\": tokenData.expires_in,\r\n                        \"expires_on\": tokenData.expires_on,\r\n                        \"scope\": scope\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        mergeProperties(identity, tokenEntry);\r\n        await storage.set({identity});\r\n    }\r\n\r\n    function supportsScopes(required, granted) {\r\n        if (!required) {\r\n            return true;\r\n        }\r\n\r\n        if (!granted) {\r\n            return false;\r\n        }\r\n\r\n        if (!Array.isArray(required)) {\r\n            required = required.toLowerCase().split(/[ +]/);\r\n        }\r\n\r\n        for (const scope of required) {\r\n            if (!granted.includes(scope)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async function getAccessToken(endpoint, resourceScope) {\r\n        if (!endpoint) {\r\n            $log.error('userService.getAccessToken - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        endpoint = getEndpointBase(endpoint);\r\n\r\n        try {\r\n            var allTokens = await getIdentityProperty('resources');\r\n\r\n            // either specifically by name or the first one if there is no entry for the endpoint\r\n            if (allTokens[endpoint]) {\r\n\r\n                var tokenData = allTokens[endpoint];\r\n                // if the resource is the same as the endpoint as in the case of legacy auth,\r\n                // no reason to validate the scopes. just return it\r\n                if (endpoint === resourceScope) {\r\n                    return tokenData;\r\n                }\r\n\r\n                if (tokenData && supportsScopes(resourceScope, tokenData.scope)) {\r\n                    return tokenData;\r\n                }\r\n\r\n                // remove it from the array so it's not checked again below\r\n                delete allTokens[endpoint];\r\n            }\r\n\r\n            // in case the token data was stored under a different endpoint, try to find the appropriate\r\n            // scopes stored under other scopes\r\n            for (const token in allTokens) {\r\n                if (supportsScopes(resourceScope, token.scope)) {\r\n                    return token;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getUserInfo(userType) {\r\n        return getIdentityProperty('userInfo', userType);\r\n    }\r\n\r\n    async function getIdentityProperty(property, userType) {\r\n        if (!userType) {\r\n            userType = await getUserType();\r\n        }\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        if (!identity[userType] || !identity[userType][property]) {\r\n            return null;\r\n        }\r\n\r\n        return identity[userType][property];\r\n    }\r\n\r\n    // Waits for the userInfo to be available (non-null) before resolving\r\n    async function waitForUserInfo(userType) {\r\n        return new Promise(async (resolve) => {\r\n            var userInfo = await getUserInfo(userType);\r\n            // userInfo is available => resolve\r\n            if (Utilities.isNotUndefinedOrNull(userInfo)) {\r\n                return resolve(userInfo);\r\n            }\r\n\r\n            BrowserHandler.runtime.onMessage.addListener(userInfoListener);\r\n\r\n            // in testing mode, only wait for a short time before giving up on getting the userInfo so as not to slow down unit tests too much\r\n            var giveUpDelay = Utilities.isExtensionInTestingMode() ? constants.TIMEOUT.USER_INFO_LOOKUP_TEST : constants.TIMEOUT.USER_INFO_LOOKUP;\r\n\r\n            // if looking up the userInfo takes too long, resolve with the current userInfo (undefined or null)\r\n            var giveUp = setTimeout(() => {\r\n                $log.warn(`userService.waitForUserInfo timed out after ${constants.TIMEOUT.USER_INFO_LOOKUP} ms - ${userType}`);\r\n                cleanUp();\r\n                resolve(userInfo);\r\n            }, giveUpDelay);\r\n\r\n            // listen for a runtime message that is sent when the userInfo is available from lookupUserInfo\r\n            function userInfoListener(request) {\r\n                if (request.activity === constants.ACTIVITY.USERINFO_AVAILABLE.NAME) {\r\n                    cleanUp();\r\n                    clearTimeout(giveUp);\r\n                    resolve(request.data);\r\n                }\r\n            }\r\n\r\n            function cleanUp() {\r\n                BrowserHandler.runtime.onMessage.removeListener(userInfoListener);\r\n            }\r\n        });\r\n    }\r\n\r\n    async function saveUserInfo(userType, data, replace) {\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        var userInfo = {};\r\n        if (identity[userType] && identity[userType].userInfo && !replace) {\r\n            userInfo = identity[userType].userInfo;\r\n        }\r\n\r\n        mergeProperties(userInfo, data);\r\n\r\n        if (identity[userType]) {\r\n            identity[userType].userInfo = userInfo;\r\n            await storage.set({identity});\r\n        }\r\n    }\r\n\r\n    function isTokenExpired(expiresOn) {\r\n        var now = Utilities.getCurrentTime();\r\n        var offset = 120;\r\n        return expiresOn && expiresOn > now + offset ? false : true;\r\n    }\r\n\r\n    async function lookupUserInfo(userService, tokenData) {\r\n        var userType = await getUserType();\r\n\r\n        var userInfo = await userService.lookupUserInfo(tokenData);\r\n        // send a message (listened to in waitForUserInfo) with the newly available userInfo\r\n        BrowserHandler.runtime.sendMessage({activity: constants.ACTIVITY.USERINFO_AVAILABLE.NAME, data: userInfo});\r\n        // save the userInfo to local storage\r\n        if (!userInfo.email && userInfo.userPrincipalName) {\r\n            userInfo.email = userInfo.userPrincipalName;\r\n        }\r\n\r\n        await saveUserInfo(userType, userInfo, true);\r\n\r\n        // get user's profile photo\r\n        await getPhotoFromServer(userService);\r\n    }\r\n\r\n    // TODO: consolidate with o365User once we have WebPack\r\n    function parseJwtToken(token) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(token);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('userService.parseJwtToken - The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var header = JSON.parse(base64DecodeStringUrlSafe(matches[1]));\r\n        var payload = JSON.parse(base64DecodeStringUrlSafe(matches[2]));\r\n        return {header, payload};\r\n    }\r\n\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n    }\r\n\r\n    // Gets the user's photo (profile picture) from either local storage or an http call\r\n    // Calls the helper functions attached to the service (getUserType, getUserInfo, getPhotoFromServer) to allow for mocking in UTs\r\n    async function getUserPhoto() {\r\n        var userType = await getUserType();\r\n        // Invalid user type - no photo\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.warn('UserService.getUserPhoto: no signed-in user');\r\n            return Promise.reject(constants.RECENTS.ERROR.UNSUPPORTED_USER_TYPE);\r\n        }\r\n\r\n        var userInfo = await getUserInfo(userType);\r\n        // If there is a photo in local storage, use that\r\n        if (userInfo && userInfo.photo) {\r\n            $log.trackEvent('UserService_GotLocalPhoto', {'userType': userType});\r\n            return userInfo.photo;\r\n        }\r\n\r\n        // No local photo - Do not retry to fetch the photo from server, use the default photo instead.\r\n        return Promise.reject('No photo in local storage');\r\n    }\r\n\r\n    // Gets the user's photo from the appropriate endpoint based on the given userType\r\n    async function getPhotoFromServer(userService) {\r\n        const serviceType = userService.type;\r\n        const userType = await getUserType();\r\n        const config = userService.getConfig();\r\n        var photoUrl = config['photoUrl'];\r\n        if (!photoUrl) {\r\n            return;\r\n        }\r\n\r\n        // Request to get photo\r\n        var photoRequest = {\r\n            method: 'GET',\r\n            url: photoUrl,\r\n            responseType: 'blob',\r\n            headers: {\r\n                'X-UserType': serviceType\r\n            }\r\n        };\r\n\r\n        // Send photo request\r\n        try {\r\n            const photo = await httpRequest(photoRequest);\r\n            $log.trackEvent('UserService_GotServerPhoto', {'userType': userType});\r\n\r\n            // Convert the photo response into a displayable string source\r\n            var reader = new FileReader();\r\n            reader.onload = async () => {\r\n\r\n                // Save the photo in the userInfo in local storage\r\n                saveUserInfo(userType, {photo: reader.result});\r\n\r\n                return reader.result;\r\n            };\r\n            reader.readAsDataURL(photo);\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async function getEndpointUrlForCurrentUser(endpoint) {\r\n        const userType = await getUserType();\r\n        if (!userType || userType === constants.USER_TYPE.NONE) {\r\n            return null;\r\n        }\r\n        var userService = await getServiceProvider(userType);\r\n        if (!userService) {\r\n            return null;\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        return config[endpoint];\r\n    }\r\n\r\n    function createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (char) {\r\n            let timestamp = performance.now();\r\n            const rand = (timestamp + Math.random() * 16) % 16 | 0;\r\n            timestamp = Math.floor(timestamp / 16);\r\n            return (char === 'x' ? rand : (rand & 0x3 | 0x8)).toString(16);\r\n        });\r\n    }\r\n\r\n    async function getUserLicenseInfo() {\r\n        var userInfo = await getUserInfo();\r\n        const licenseProps = ['driveQuota', 'licenses'];\r\n        return licenseProps.reduce((previous, current) => {\r\n            if (userInfo[current]) {\r\n                previous[current] = userInfo[current];\r\n            }\r\n            return previous;\r\n        }, {});\r\n    }\r\n\r\n    // all exports are async\r\n    return {\r\n        acquireToken,\r\n        clearToken,\r\n        isLoggedIn,\r\n        getEndpointUrlForCurrentUser,\r\n        getUserType,\r\n        getUserInfo,\r\n        getUserPhoto,\r\n        httpRequest,\r\n        navigateToAuthEndpoint,\r\n        saveUserInfo,\r\n        waitForUserInfo,\r\n        getUserLicenseInfo,\r\n        useAuthNext,\r\n        // Exposed to be called from UTs\r\n        authorize,\r\n        getAccessToken,\r\n        getPhotoFromServer,\r\n        login,\r\n        logout,\r\n        lookupUserInfo,\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport { AWTLogManager } from '@aria/webjs-sdk';\r\n\r\n// Set instrumentation key depending on whether extension is in development mode\r\n//[SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"not a auth secret. designates the Aria tenent\")]\r\nvar tenantId = '2c8ba5f543dc45cabca6a8903ae65ec0-17b4b4b1-0680-4459-8c45-b7c284ec277d-7329';\r\n\r\n// Initialize\r\nAWTLogManager.initialize(tenantId);\r\nconst browserVersion = Utilities.getBrowserAndVersion();\r\nif (browserVersion) {\r\n    AWTLogManager.setContext('DeviceInfo.BrowserName', browserVersion.browser);\r\n    AWTLogManager.setContext('DeviceInfo.BrowserVersion', browserVersion.version);\r\n}\r\n// Store the logger instance in a variable that is accessible in other methods of your page\r\nvar ariaLogger = AWTLogManager.getLogger(tenantId);\r\n(window as any).ariaLogger = ariaLogger;\r\n","import constants from './constants';\r\nimport Utilities from './utilities';\r\nimport 'angular';\r\n\r\nexport default httpInterceptor;\r\n\r\nfunction httpInterceptor($q, $log, $timeout, $injector) {\r\n    var retries = 0;\r\n    return {\r\n        request: function (config) {\r\n            if (Utilities.isUndefinedOrNull(config.timeout)) {\r\n                config.timeout = constants.TIMEOUT.DEFAULT_REQUEST;\r\n            }\r\n            return config;\r\n        },\r\n        responseError: function (response) {\r\n            if (response) {\r\n                switch (response.status) {\r\n                    case 0:\r\n                        $log.debug(`httpErrorResponseInterceptor - Request cancelled - ${response.config.url}`);\r\n                        break;\r\n                    case 401:\r\n                        $log.info(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                        break;\r\n                    case 400:\r\n                        // Error of invalid AADService. Log the info trace.\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50001\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Invalid AADSerivce - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            break;\r\n                        }\r\n\r\n                        // Interaction required. Retry the request with the same resource for 3 times.\r\n                        // https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-oauth-code\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50079\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Interaction required - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            if (retries < constants.ERROR_RETRIES.HTTP_REQUEST) {\r\n                                retries++;\r\n                                return $timeout(function () {\r\n                                    var $http = $injector.get('$http');\r\n                                    return $http(response.config);\r\n                                }, constants.TIMEOUT.USER_INFO_LOOKUP);\r\n                            }\r\n\r\n                            retries = 0;\r\n                        }\r\n                        break;\r\n                    case 404:\r\n                        // don't throw exceptions when graph returns something not found\r\n                        if (response.config.url.startsWith('https://graph.microsoft.com/v1.0/me/drive')) {\r\n                            return $q.resolve(response);\r\n                        }\r\n                    // eslint-disable-next-line no-fallthrough\r\n                    default:\r\n                        $log.error(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                }\r\n            }\r\n\r\n            return $q.reject(response);\r\n        },\r\n    };\r\n}\r\n","import BrowserHandler from './browserHandler';\r\nimport Utilities from '../common/utilities';\r\nimport {mapStackTrace} from 'sourcemapped-stacktrace';\r\n\r\nexport default function logDecorator($delegate, telemetry) {\r\n    // App Insights custom property values have a max length of 8192\r\n    // Limit to 8000 to stay under the App Insights limit\r\n    function getTruncatedString(string) {\r\n        return string.length > 8000 ? string.substring(0, 8000) : string;\r\n    }\r\n\r\n    // Wrapper functions for telemetry in order to handle any errors from the telemetry service //\r\n\r\n    // Gets the enabled setting from storage\r\n    function getEnabledSetting() {\r\n        return telemetry.getEnabledSetting();\r\n    }\r\n\r\n    // Sets the enabled setting\r\n    function setEnabledSetting(enabled) {\r\n        try {\r\n            telemetry.setEnabledSetting(enabled);\r\n        } catch (error) {\r\n            $delegate.error(`setEnabledSetting error: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom event\r\n    function trackEvent(eventName, properties, measurements) {\r\n        try {\r\n            telemetry.trackEvent(eventName, properties, measurements);\r\n        } catch (error) {\r\n            $delegate.error(`trackEvent error with eventName ${eventName}: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom trace (logging/diagnostics info)\r\n    function trackTrace(message, properties) {\r\n        try {\r\n            telemetry.trackTrace(message, properties);\r\n        } catch (error) {\r\n            // empty - if trackTrace fails, then error, info, warn, and debug statements can't be logged\r\n        }\r\n    }\r\n\r\n    function trimExtensionOrigin(url) {\r\n        try {\r\n            const extensionOrigin = (new URL(location.href)).origin + '/';\r\n            url = url.toString().replace(extensionOrigin, '');\r\n        }\r\n        // eslint-disable-next-line no-empty\r\n        catch {}\r\n\r\n        return url;\r\n    }\r\n\r\n    // Sends the log in a message where the background script will handle it and log\r\n    // the message to the console. Only useful in cases like the popup where an event\r\n    // may get logged before you can open the debugger window\r\n    function logToBackground(message, severity, stack, filename, source) {\r\n        if (Utilities.isBackgroundContext()) {\r\n            try {\r\n                const now = new Date();\r\n                var timeStamp = now.toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n                var log = `[${timeStamp}] (${trimExtensionOrigin(source)}) ${filename ? filename + ' ' : ''} ${message}`;\r\n                console[severity.toLowerCase()](log);\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n            catch {}\r\n            return;\r\n        }\r\n\r\n        BrowserHandler.runtime.sendMessage({\r\n            activity: 'log',\r\n            severity: severity,\r\n            log: message,\r\n            filename: filename,\r\n            stack: stack\r\n        });\r\n    }\r\n\r\n    function messageString(message) {\r\n        if (typeof message === 'string') {\r\n            return message;\r\n        }\r\n        return JSON.stringify(message);\r\n    }\r\n\r\n    // Returns a new logging function (error, info, etc.) that extends the original logging function\r\n    var prepareLog = function (originalFunction, severityLevel) {\r\n        return function () {\r\n            var args = [].slice.call(arguments);\r\n            var logParams = args[0];\r\n            var fullStack = undefined;\r\n\r\n            if (Utilities.isExtensionInDevelopmentMode()) {\r\n                fullStack = Error().stack;\r\n            }\r\n\r\n            var message = getTruncatedString(messageString(logParams.message ? logParams.message : logParams));\r\n\r\n            new Promise((resolve) => {\r\n                if (logParams.stack) {\r\n                    resolve(typeof logParams.stack === 'string' ? getTruncatedString(logParams.stack).split('\\n') : logParams.stack);\r\n                } else if (fullStack) {\r\n                    mapStackTrace(fullStack, mappedStack => {\r\n                        // remove this file from the top of the stack\r\n                        while (mappedStack[0].match('logDecorator.js')) {\r\n                            mappedStack.shift();\r\n                        }\r\n\r\n                        resolve(mappedStack);\r\n                    }, {/*cacheGlobally: true*/});\r\n                } else {\r\n                    resolve([]);\r\n                }\r\n            }).then((stack) => {\r\n                var filename = '';\r\n                var source = logParams.source || location;\r\n                if (logParams.filename) {\r\n                    filename = logParams.filename;\r\n                } else {\r\n                    for (var caller of stack) {\r\n                        var matched = caller.match(/\\b[\\w.]+\\b:\\d+/g);\r\n                        if (!matched) {\r\n                            continue;\r\n                        }\r\n                        filename = matched.pop();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                logToBackground(message, severityLevel, stack, filename, source);\r\n                var timeStamp = new Date().toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n\r\n                args[0] = `[${timeStamp}] ${filename ? filename + ' ' : ''}${severityLevel}: ${message}`;\r\n\r\n                // Only output logs in development mode\r\n                if (Utilities.isExtensionInDevelopmentMode()) {\r\n                    originalFunction.apply(null, args);\r\n                }\r\n\r\n                // Do not track debug trace messages to telemetry\r\n                if (severityLevel === 'DEBUG') {\r\n                    return;\r\n                }\r\n\r\n                trackTrace(severityLevel, {\r\n                    message: message,\r\n                    stack: severityLevel === 'ERROR' ? stack : '',\r\n                });\r\n            });\r\n        };\r\n    };\r\n\r\n    // Extend the original $delegate logging functions\r\n    $delegate.debug = prepareLog($delegate.debug, 'DEBUG');\r\n    $delegate.info = prepareLog($delegate.info, 'INFO');\r\n    $delegate.warn = prepareLog($delegate.warn, 'WARN');\r\n    $delegate.error = prepareLog($delegate.error, 'ERROR');\r\n\r\n    // Attach telemetry functions to the $delegate so that $log can replace the telemetry service throughout the application\r\n    $delegate.getEnabledSetting = getEnabledSetting;\r\n    $delegate.setEnabledSetting = setEnabledSetting;\r\n    $delegate.trackEvent = trackEvent;\r\n    $delegate.trackTrace = trackTrace;\r\n\r\n    return $delegate;\r\n}\r\n","import BrowserHandler from './browserHandler';\r\n\r\nwindow.dumpStorage = () => {\r\n    if (!window.chrome) {\r\n        return;\r\n    }\r\n\r\n    window.chrome.storage.local.get(null, result => {\r\n        console.log(`result '${JSON.stringify(result, '\\t')}'`);\r\n    });\r\n};\r\n\r\nexport default function ($q, $log) {\r\n    return {\r\n        get: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.get(keys, function (result) {\r\n                $log.debug(`storage: get '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        set: function (items) {\r\n            $log.debug(`storage: set items '${JSON.stringify(items)}'`);\r\n            BrowserHandler.storage.local.set(items);\r\n        },\r\n\r\n        remove: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.remove(keys, function (result) {\r\n                $log.debug(`storage: remove '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        clear: function () {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.clear(function (result) {\r\n                $log.debug(`storage: clear result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport './browserHandler'; /* eslint-disable-line sort-imports */\r\nimport 'angularjs-localizationservice.1.0.1/localize';\r\nimport httpInterceptor from './httpInterceptor';\r\nimport logDecorator from './logDecorator';\r\nimport notification from './notification.service';\r\nimport storage from './storage.service';\r\n\r\nvar commonModule = angular\r\n    .module('app.common', [])\r\n    .config(['$httpProvider', '$provide', appCommon])\r\n    .factory('storage', ['$q', '$log', storage])\r\n    .factory('notification', ['$log', 'localize', notification])\r\n    .factory('httpInterceptor', ['$q', '$log', '$timeout', '$injector', httpInterceptor]);\r\n\r\nexport default commonModule.name;\r\n\r\nfunction appCommon($httpProvider, $provide) {\r\n    $provide.decorator('$log', ['$delegate', 'telemetry', logDecorator]);\r\n\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('httpInterceptor');\r\n}\r\n","import Utilities from './utilities';\r\nimport BrowserHandler from './browserHandler';\r\nimport constants from './constants';\r\n\r\nexport default function ($log, localize) {\r\n    return {\r\n        show: function (notification) {\r\n            // Send message to background instance to handle show notification.\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.NOTIFICATION.NAME,\r\n                    notification: notification,\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            var buttons;\r\n            if (notification.buttons !== undefined && notification.buttons !== null) {\r\n                buttons = [];\r\n                for (var index = 0; index < notification.buttons.length; ++index) {\r\n                    buttons[index] = {};\r\n                    buttons[index].title = localize.getLocalizedString(notification.buttons[index].title);\r\n                    buttons[index].iconUrl = notification.buttons[index].iconUrl;\r\n                }\r\n            }\r\n\r\n            BrowserHandler.notifications.clear(notification.id, function (wasCleared) {\r\n                BrowserHandler.notifications.create(\r\n                    notification.id,\r\n                    {\r\n                        iconUrl: '../assets/icon.png',\r\n                        imageUrl: notification.imageUrl,\r\n                        message: localize.getLocalizedString(notification.message),\r\n                        priority: notification.priority,\r\n                        progress: notification.progress,\r\n                        title: '',\r\n                        type: notification.type,\r\n                        buttons: buttons,\r\n                    },\r\n                    function (notificationId) {\r\n                        if (notificationId === undefined || notificationId === null) {\r\n                            $log.error('CreateNotificationError');\r\n                        }\r\n                    }\r\n                );\r\n            });\r\n        },\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport angular from 'angular';\r\nimport constants from '../common/constants';\r\nimport {checkPermission} from '../common/permissions';\r\n\r\nexport default angular\r\n    .module('app.background', [])\r\n    .controller('BackgroundController', [\r\n        '$window',\r\n        '$http',\r\n        '$q',\r\n        '$log',\r\n        'notification',\r\n        'storage',\r\n        'userService',\r\n        'fileService',\r\n        'copyPasteService',\r\n        backgroundController,\r\n    ]);\r\n\r\nfunction backgroundController($window, $http, $q, $log, notification, storage, userService, fileService, copyPasteService) {\r\n    userService.isLoggedIn().then(status => {\r\n        status ? Utilities.setIcon(constants.BROWSER_ICON.DEFAULT) : Utilities.setIcon(constants.BROWSER_ICON.INACTIVE);\r\n    });\r\n\r\n    var webRedirectDisabled;\r\n    storage.get('webRedirect_disabled').then(function (result) {\r\n        webRedirectDisabled = Utilities.isNotUndefinedOrNull(result.webRedirect_disabled) && result.webRedirect_disabled;\r\n    });\r\n\r\n    BrowserHandler.windows.onFocusChanged.addListener(function (windowId) {\r\n        updateSessionInfo();\r\n    });\r\n\r\n    var sessionInfo;\r\n\r\n    async function updateSessionInfo(force) {\r\n        var currentTime = new Date();\r\n\r\n        if (sessionInfo) {\r\n            var startSession = new Date(sessionInfo.startTime);\r\n            // update the elapsed time\r\n            var elapsed = currentTime - startSession;\r\n            sessionInfo.duration += elapsed;\r\n        } else {\r\n            var result = await storage.get('LastSession');\r\n            if (result && result.LastSession && Number.isInteger(result.LastSession.duration) && Date.parse(result.LastSession.startTime)) {\r\n                sessionInfo = result.LastSession;\r\n\r\n                // remap old start_time to new startTime\r\n                if (sessionInfo.hasOwnProperty('start_time')) {\r\n                    sessionInfo.startTime = sessionInfo.start_time;\r\n                    delete sessionInfo.start_time;\r\n                }\r\n            } else {\r\n                sessionInfo = {\r\n                    startTime: currentTime,\r\n                    duration: 0,\r\n                };\r\n            }\r\n        }\r\n\r\n        // if the currentTime is not the same day as the last update,\r\n        // log the telemetry and reset the start time\r\n        var logDay = new Date(sessionInfo.startTime);\r\n        var today = new Date(currentTime);\r\n        today.setHours(0, 0, 0, 0);\r\n        logDay.setHours(0, 0, 0, 0);\r\n\r\n        if (force || today - logDay) {\r\n            $log.trackEvent('Session', {startTime: sessionInfo.startTime, duration: sessionInfo.duration, minutes: Math.floor(sessionInfo.duration / 60000)});\r\n            sessionInfo.duration = 0;\r\n        }\r\n\r\n        sessionInfo.startTime = currentTime.toString();\r\n\r\n        storage.set({\r\n            LastSession: sessionInfo,\r\n        });\r\n    }\r\n\r\n    BrowserHandler.storage.onChanged.addListener(\r\n        function (changes, areaName) {\r\n            if (Utilities.isNotUndefinedOrNull(changes.webRedirect_disabled)) {\r\n                webRedirectDisabled = changes.webRedirect_disabled.newValue;\r\n            }\r\n            else if (changes.identity) {\r\n                var identity = changes.identity.newValue;\r\n                identity ? Utilities.setIcon(constants.BROWSER_ICON.DEFAULT) : Utilities.setIcon(constants.BROWSER_ICON.INACTIVE);\r\n            }\r\n        });\r\n\r\n    // Begin documents from the web\r\n    var documentTabId;\r\n\r\n    BrowserHandler.webRequest.onSendHeaders.addListener(\r\n        function (data) {\r\n            // Only evaluate web requests where the resource is the document of a tab content window\r\n            if (data.type !== 'main_frame') {\r\n                return;\r\n            }\r\n            // Examine Referer header to determine whether to redirect to Office for the web or not.\r\n            for (var i = 0; i < data.requestHeaders.length; ++i) {\r\n                if (data.requestHeaders[i].name === 'Referer') {\r\n                    if (data.requestHeaders[i].value.indexOf('officeapps.live.com') >= 0) {\r\n                        // If user is viewing document in Office on the web, set the tabId to null to stop redirecting.\r\n                        documentTabId = null;\r\n                    } else {\r\n                        documentTabId = data.tabId;\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        {\r\n            urls: [\r\n                '*://*/*.doc',\r\n                '*://*/*.doct',\r\n                '*://*/*.docx',\r\n                '*://*/*.dotx',\r\n                '*://*/*.odt',\r\n                '*://*/*.ppt',\r\n                '*://*/*.pot',\r\n                '*://*/*.pps',\r\n                '*://*/*.pptx',\r\n                '*://*/*.ppsx',\r\n                '*://*/*.odp',\r\n                '*://*/*.xls',\r\n                '*://*/*.xlsx',\r\n                '*://*/*.xlsm',\r\n                '*://*/*.xlsb',\r\n                '*://*/*.ods',\r\n            ],\r\n        },\r\n        ['requestHeaders']\r\n    );\r\n\r\n    BrowserHandler.webRequest.onHeadersReceived.addListener(\r\n        function (data) {\r\n            // If web document redirecting settings has been disabled by the user, stop redirecting.\r\n            if (webRedirectDisabled) {\r\n                return;\r\n            }\r\n\r\n            // Only evaluate web requests where the resource is the document of a tab content window\r\n            if (data.type !== 'main_frame') {\r\n                return;\r\n            }\r\n\r\n            // Continue processing this request iff we are able to inspect the response headers, the referrer was not Office for the web (ie documentTabId === null)\r\n            if (\r\n                Utilities.isUndefinedOrNull(data.responseHeaders) ||\r\n                Utilities.isUndefinedOrNull(documentTabId) ||\r\n                Utilities.isUndefinedOrNull(data.tabId) ||\r\n                documentTabId !== data.tabId\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            // Examine Cache-Control and Content-Type in response header.\r\n            // Redirect valid online document to be viewed in Office on the web.\r\n            var response = {};\r\n            for (var i = 0; i < data.responseHeaders.length; ++i) {\r\n                response[data.responseHeaders[i].name] = data.responseHeaders[i].value;\r\n            }\r\n\r\n            if (isResponseHeaderPrivate(response, 'Cache-Control') || isResponseHeaderPrivate(response, 'Pragma')) {\r\n                // If the web linked document is a private content, stop redirecting.\r\n                return;\r\n            } else if (response['Content-Type']) {\r\n                if (constants.FILE.OFFICE_MIME_TYPES[response['Content-Type'].toLowerCase()]) {\r\n                    // Check if the web linked document is a valid Office document\r\n                    $log.trackEvent('OpenDocument_BrowserWebDocument');\r\n\r\n                    storage.get('displayWebDocRedirectNotification').then(function (result) {\r\n                        if (\r\n                            Utilities.isUndefinedOrNull(result.displayWebDocRedirectNotification) ||\r\n                            result.displayWebDocRedirectNotification === true\r\n                        ) {\r\n                            notification.show(constants.NOTIFICATION.WEBDOCREDIRECT);\r\n                        }\r\n                    });\r\n\r\n                    return {redirectUrl: 'https://view.officeapps.live.com/op/view.aspx?src=' + data.url};\r\n                } else {\r\n                    $log.trackEvent('WebRequest_Header', {'contentType': response['Content-Type']});\r\n                    return;\r\n                }\r\n            }\r\n            return;\r\n        },\r\n        {\r\n            urls: [\r\n                '*://*/*.doc',\r\n                '*://*/*.doct',\r\n                '*://*/*.docx',\r\n                '*://*/*.dotx',\r\n                '*://*/*.odt',\r\n                '*://*/*.ppt',\r\n                '*://*/*.pot',\r\n                '*://*/*.pps',\r\n                '*://*/*.pptx',\r\n                '*://*/*.ppsx',\r\n                '*://*/*.odp',\r\n                '*://*/*.xls',\r\n                '*://*/*.xlsx',\r\n                '*://*/*.xlsm',\r\n                '*://*/*.xlsb',\r\n                '*://*/*.ods',\r\n            ],\r\n        },\r\n        ['responseHeaders', 'blocking']\r\n    );\r\n\r\n    // End documents from the web\r\n\r\n    // Begin documents from local storage\r\n\r\n    // Add a listener for local file web requests\r\n    // Fires when dragging a file into the browser or using the file picker\r\n    BrowserHandler.webRequest.onBeforeRequest.addListener(\r\n        function (data) {\r\n            // Only evaluate web requests where the resource is the document of a tab content window\r\n            if (data.type !== 'main_frame') {\r\n                return;\r\n            }\r\n            $log.trackEvent('OpenDocument_BrowserDragAndDrop');\r\n            var activeTabId = data.tabId;\r\n            fileService.upload(data.url, constants.FILE.ORIGIN.LOCAL_PATH, function (fileUrl) {\r\n                if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                    // File upload failed; return\r\n                    return;\r\n                }\r\n\r\n                openFileUrlInTab(fileUrl, activeTabId);\r\n            });\r\n\r\n            return {redirectUrl: constants.LINKS.PROGRESSPAGE_URL};\r\n        },\r\n        {\r\n            urls: [\r\n                'file:///*.doc',\r\n                'file:///*.doct',\r\n                'file:///*.docx',\r\n                'file:///*.dotx',\r\n                'file:///*.odt',\r\n                'file:///*.ppt',\r\n                'file:///*.pot',\r\n                'file:///*.pps',\r\n                'file:///*.pptx',\r\n                'file:///*.ppsx',\r\n                'file:///*.odp',\r\n                'file:///*.xlsx',\r\n                'file:///*.xlsm',\r\n                'file:///*.xlsb',\r\n                'file:///*.ods',\r\n            ],\r\n        },\r\n        ['blocking']\r\n    );\r\n\r\n    // Listening for errors in local file web requests.\r\n    BrowserHandler.webRequest.onErrorOccurred.addListener(\r\n        function (details) {\r\n            // Record the error\r\n            $log.error(`BackgroundWebRequestOnErrorOccured - ${details.error}`);\r\n        },\r\n        {\r\n            urls: [\r\n                'file:///*.doc',\r\n                'file:///*.doct',\r\n                'file:///*.docx',\r\n                'file:///*.dotx',\r\n                'file:///*.odt',\r\n                'file:///*.ppt',\r\n                'file:///*.pot',\r\n                'file:///*.pps',\r\n                'file:///*.pptx',\r\n                'file:///*.ppsx',\r\n                'file:///*.odp',\r\n                'file:///*.xlsx',\r\n                'file:///*.xlsm',\r\n                'file:///*.xlsb',\r\n                'file:///*.ods',\r\n            ],\r\n        }\r\n    );\r\n\r\n    // End documents from local storage\r\n\r\n    // Display log install or update and clear old data\r\n    BrowserHandler.runtime.onInstalled.addListener(async function (details) {\r\n        var manifest = Utilities.getManifest();\r\n        var appVersion = manifest ? manifest.version : -1;\r\n\r\n        if (details.reason === 'install') {\r\n            $log.trackEvent('AppInstalled', {'appVersion': appVersion});\r\n\r\n            // I don't think this is a thing anymore, I don't see it in the extension settings\r\n            // and the manifest supports permissions now\r\n            // Prompt allow access to file urls notification when first time installing the app\r\n            // notification.show(constants.NOTIFICATION.FILEACCESS);\r\n\r\n            BrowserHandler.runtime.getPlatformInfo(platformInfo => {\r\n                if (platformInfo.os === 'cros') {\r\n                    // Prompt double click to open notification when first time installing the app on ChromeOS\r\n                    notification.show(constants.NOTIFICATION.SETDEFAULT);\r\n                }\r\n            });\r\n\r\n            // Show support page when when first time installing the app\r\n            // Editor specific\r\n            var supportUrl = Utilities.shouldShowEditorMaterial() ? constants.LINKS.SUPPORT_URL_EDITOR : constants.LINKS.SUPPORT_URL;\r\n\r\n            // There have been complaints of this showing after updating so look for some residual\r\n            // data in local storage to see if this is really a first install before opening the supportUrl\r\n            try {\r\n                const result = await storage.get(['deviceId', 'LastSession']);\r\n                // if there are any values (keys) then it's not really a first install\r\n                if (Object.keys(result).length) {\r\n                    return;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // if an exception was thrown trying to retrieve any settings then assume\r\n                // this is first run\r\n            }\r\n            openFileUrlInTab(supportUrl, null);\r\n\r\n        }\r\n        else if (details.reason === 'update') {\r\n            $log.trackEvent('AppUpdated', {'appVersion': appVersion, previousVersion: details.previousVersion});\r\n\r\n            if (Utilities.isNotUndefinedOrNull(window.localStorage.getItem(constants.OAUTH.SERVICE_ID))) {\r\n                // If the serviceInfo is stored in window.localStorage, reset the storage data.\r\n                storage.clear();\r\n                window.localStorage.clear();\r\n            }\r\n\r\n            storage.get('userInfo').then(function (result) {\r\n                if (\r\n                    Utilities.isNotUndefinedOrNull(result) &&\r\n                    Utilities.isNotUndefinedOrNull(result.userInfo) &&\r\n                    (Utilities.isNotUndefinedOrNull(result.userInfo.id) || Utilities.isNotUndefinedOrNull(result.userInfo.profile))\r\n                ) {\r\n                    // If the userInfo is in old data form, reset the storage data.\r\n                    storage.clear();\r\n                    window.localStorage.clear();\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    BrowserHandler.notifications.onButtonClicked.addListener(function (notificationId) {\r\n        switch (notificationId) {\r\n            case constants.NOTIFICATION.AUTOSAVE.id:\r\n                storage.set({displayAutoSaveNotification: false});\r\n                break;\r\n            case constants.NOTIFICATION.WEBDOCREDIRECT.id:\r\n                storage.set({displayWebDocRedirectNotification: false});\r\n                break;\r\n        }\r\n    });\r\n\r\n    BrowserHandler.notifications.onClicked.addListener(function (notificationId) {\r\n        switch (notificationId) {\r\n            case constants.NOTIFICATION.FILEACCESS.id:\r\n                BrowserHandler.tabs.create({url: constants.LINKS.SETTINGS_URL});\r\n                break;\r\n            case constants.NOTIFICATION.INVALIDSUBSCRIPTION.id:\r\n                BrowserHandler.tabs.create({url: constants.LINKS.OFFICE_URL});\r\n                break;\r\n        }\r\n    });\r\n\r\n    // Listen to incoming messages from foreground pages process requests\r\n    BrowserHandler.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n        switch (request.eventId) {\r\n            // ignoring messages from editor telemetry with known eventIds\r\n            case \"telemetryEvent\":\r\n            case \"newActivityTelemetryEvent\":\r\n                return;\r\n        }\r\n\r\n        // ignore messages that don't have activity as they aren't ours\r\n        if (!request.activity) {\r\n            return;\r\n        }\r\n\r\n        switch (request.activity) {\r\n            case constants.ACTIVITY.LOG.NAME:\r\n                {\r\n                    var source = undefined;\r\n                    if (sender.url) {\r\n                        var url = new URL(sender.url);\r\n                        source = url.origin + url.pathname;\r\n                    }\r\n\r\n                    $log[request.severity.toLowerCase()]({message: request.log, stack: request.stack, filename: request.filename, source});\r\n                    // no need to log (below switch block) that we've logged so just return\r\n                    return;\r\n                }\r\n            case constants.ACTIVITY.SSO.NAME:\r\n                {\r\n                    // Handle SSO for AAD users by sending messages to native client\r\n                    try {\r\n                        // Pass the sender into the native host to validate that the page is able to call this method.\r\n                        request.body.sender = sender.url;\r\n\r\n                        if ('GetSupportedUrls'.localeCompare(request.body.method, undefined, { sensitivity: 'base' }) == 0) {\r\n                            RespondWithError(CreateInvalidMethodResponse(), sendResponse);\r\n                            return true;\r\n                        }\r\n\r\n                        BrowserHandler.runtime.sendNativeMessage(\r\n                            constants.SSO.MESSAGE_CHANNEL,\r\n                            request.body,\r\n                            function (result) {\r\n                                var response = {};\r\n                                $log.debug(`BrowserCore response: ${JSON.stringify(result)}`);\r\n                                if (result) {\r\n                                    if (result.status === constants.SSO.RESPONSE_STATUS_FAIL) {\r\n                                        RespondWithError(result, sendResponse);\r\n                                    } else {\r\n                                        response = Object.assign({status: constants.SSO.RESPONSE_STATUS_SUCCESS, result});\r\n                                        $log.trackEvent('SSO_SUCCESS');\r\n                                        sendResponse(response);\r\n                                    }\r\n                                } else {\r\n                                    RespondWithError({\r\n                                        status: constants.SSO.RESPONSE_STATUS_FAIL,\r\n                                        code: constants.SSO.RESPONSE_CODE_NO_SUPPORT,\r\n                                        description: BrowserHandler.runtime.lastError.message,\r\n                                    }, sendResponse);\r\n                                }\r\n                            });\r\n                    }\r\n                    catch (e) {\r\n                        RespondWithError({\r\n                            status: constants.SSO.RESPONSE_STATUS_FAIL,\r\n                            code: constants.SSO.RESPONSE_CODE_NO_SUPPORT,\r\n                            description: e.toString(),\r\n                        }, sendResponse);\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            case constants.ACTIVITY.TELEMETRY.NAME:\r\n                switch (request.command) {\r\n                    case constants.TELEMETRY.COMMAND.SET_DISABLED:\r\n                        $log.setEnabledSetting(request.enabled);\r\n                        setUninstallUrl(request.enabled);\r\n                        break;\r\n                    case constants.TELEMETRY.COMMAND.TRACK_EVENT:\r\n                        $log.trackEvent(request.eventName, request.properties, request.measurements);\r\n                        break;\r\n                    case constants.TELEMETRY.COMMAND.TRACK_TRACE:\r\n                        $log.trackTrace(request.message, request.properties);\r\n                        break;\r\n                }\r\n                break;\r\n            case constants.ACTIVITY.NOTIFICATION.NAME:\r\n                notification.show(request.notification);\r\n                break;\r\n            case constants.ACTIVITY.AUTHENTICATION.NAME:\r\n            case constants.ACTIVITY.AUTHORIZATION.NAME:\r\n            case constants.ACTIVITY.LOGOUT.NAME:\r\n            case constants.ACTIVITY.REQUEST_TOKEN.NAME:\r\n                // Ignore these that are explicitly handled elsewhere\r\n                return;\r\n            default: {\r\n                $log.warn(`Unhandled activity:${JSON.stringify(request)}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        $log.debug(`BackgroundController.onMessage: Processed activity ${request.activity}`);\r\n    });\r\n\r\n    // We only support copy&paste in Chrome, so check browser and register listeners if we are running on Chrome.\r\n    if (Utilities.isChrome()) {\r\n        checkPermission(['clipboardRead', 'clipboardWrite'], $log).then(granted => {\r\n            if (!granted) {\r\n                return;\r\n            }\r\n            BrowserHandler.runtime.onMessageExternal.addListener(function (msg, sender, callback) {\r\n                switch (msg.command) {\r\n                    case constants.COPY_PASTE.TEST:\r\n                        return copyPasteService.handleTestCommand(msg, sender, callback);\r\n                    case constants.COPY_PASTE.PASTE:\r\n                        return copyPasteService.handlePasteCommand(msg, sender, callback);\r\n                    case constants.COPY_PASTE.GET_CLIPBOARD_DATA:\r\n                        return copyPasteService.handleGetClipboardDataCommand(msg, sender, callback);\r\n                    case constants.COPY_PASTE.GET_AVAILABLE_COMMANDS:\r\n                        return copyPasteService.handleGetAvailableCommands(msg, sender, callback);\r\n                    default:\r\n                        return false;\r\n                }\r\n            });\r\n        });\r\n        $window.addEventListener('paste', copyPasteService.onPasteEvent);\r\n\r\n        // SSO for gsuite account federated with AAD on Chrome OS\r\n        checkPermission(['identity', 'identity.email'], $log).then(granted => {\r\n            if (!granted) {\r\n                return;\r\n            }\r\n\r\n            BrowserHandler.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\r\n                if (\r\n                    !changeInfo.url ||\r\n                    !isLogInUrl(changeInfo.url) ||\r\n                    changeInfo.url.indexOf('login_hint') !== -1 ||\r\n                    changeInfo.url.indexOf('username') !== -1\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                BrowserHandler.identity.getProfileUserInfo(function (userInfo) {\r\n                    if (!userInfo || !userInfo.email) {\r\n                        return;\r\n                    }\r\n                    var email = userInfo.email;\r\n\r\n                    var request = {\r\n                        method: 'GET',\r\n                        url: constants.O365CONFIG.FEDERATED_URL + '?login=' + email,\r\n                    };\r\n\r\n                    $http(request).then(\r\n                        function (response) {\r\n                            var data = response.data;\r\n                            if (data && data.NameSpaceType === 'Federated' && data.DomainName !== 'live.com') {\r\n                                var param = changeInfo.url.indexOf('https://login.live.com/login.srf') === -1 ? 'login_hint' : 'username';\r\n                                var currentUrl = changeInfo.url;\r\n                                if (currentUrl.indexOf('?') !== -1) {\r\n                                    currentUrl += '&' + param + '=' + email;\r\n                                } else {\r\n                                    currentUrl += '?' + param + '=' + email;\r\n                                }\r\n                                BrowserHandler.tabs.update(tabId, {url: currentUrl});\r\n                            }\r\n                        },\r\n                        function () {\r\n                            return;\r\n                        });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    BrowserHandler.runtime.getPlatformInfo(function (platformInfo) {\r\n        if (platformInfo.os !== 'cros') {\r\n            return;\r\n        }\r\n\r\n        checkPermission('fileBrowserHandler', $log).then(granted => {\r\n            if (!granted) {\r\n                return;\r\n            }\r\n\r\n            // Listen to incoming messages from file browser handler for Chrome OS.\r\n            BrowserHandler.fileBrowserHandler.onExecute.addListener(function (id, details) {\r\n                var fileEntries = details.entries;\r\n                uploadFiles(fileEntries, function (fileUrl) {\r\n                    if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                        // File upload failed; return\r\n                        return;\r\n                    }\r\n\r\n                    openFileUrlInTab(fileUrl, null);\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    function isLogInUrl(url) {\r\n        return (\r\n            url.search(/^https:\\/\\/login\\.microsoftonline\\.com\\/(common|.{8}-.{4}-.{4}-.{4}-.{12})\\/oauth2\\/authorize/) != -1 ||\r\n            url.indexOf('https://login.live.com/login.srf') !== -1\r\n        );\r\n    }\r\n\r\n    function receiveMessage(event) {\r\n        if (BrowserHandler.runtime.getURL('').search(new RegExp(event.origin, 'i')) !== 0) {\r\n            $log.error(`BackgroundController.receiveMessage: Error processing message with unrecognized origin ${event.origin}`);\r\n            return;\r\n        }\r\n\r\n        if (Object.prototype.toString.call(event.data) !== '[object File]') {\r\n            $log.error(\r\n                `BackgroundController.receiveMessage: Error processing message with event.data type ${Object.prototype.toString.call(event.data)}`\r\n            );\r\n            return;\r\n        }\r\n\r\n        uploadFile(event.data, function (fileUrl) {\r\n            if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                // File upload failed; return\r\n                return;\r\n            }\r\n\r\n            openFileUrlInTab(fileUrl, null);\r\n        });\r\n    }\r\n    window.addEventListener('message', receiveMessage, false);\r\n\r\n    // Creates a new browser tab with progresspage url and returns its' tab id\r\n    function getDisplayTabId(startUrl) {\r\n        if (Utilities.isUndefinedOrNull(startUrl)) {\r\n            startUrl = constants.LINKS.PROGRESSPAGE_URL;\r\n        }\r\n\r\n        var deferred = $q.defer();\r\n        BrowserHandler.windows.getAll(function (windows) {\r\n            if (windows.length === 0) {\r\n                // Creating a new BrowserHandler window if there is no current window existing.\r\n                BrowserHandler.windows.create({url: startUrl, type: 'normal'}, function (windowInfo) {\r\n                    deferred.resolve(windowInfo.tabs[0].id);\r\n                });\r\n            } else {\r\n                BrowserHandler.tabs.create({url: startUrl}, function (tab) {\r\n                    deferred.resolve(tab.id);\r\n                });\r\n            }\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    // Helper method that takes an array of HTML5 file entries and uploads each file; executes callback after each upload\r\n    function uploadFiles(fileEntries, callback) {\r\n        if (Utilities.isUndefinedOrNull(fileEntries)) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < fileEntries.length; ++i) {\r\n            fileEntries[i].file(function (file) {\r\n                uploadFile(file, function (fileUrl) {\r\n                    callback(fileUrl);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // Helper method that takes an  HTML5 file entry and uploads the file; executes callback after upload\r\n    function uploadFile(file, callback) {\r\n        if (Utilities.isUndefinedOrNull(file)) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        fileService.upload(file, constants.FILE.ORIGIN.HTML5, function (fileUrl) {\r\n            callback(fileUrl);\r\n        });\r\n    }\r\n\r\n    // Helper method that opens a file url given a tab id; will create a new window or tab if tabId is null\r\n    function openFileUrlInTab(fileUrl, tabId) {\r\n        var deferred = $q.defer();\r\n        deferred.resolve(Utilities.isNotUndefinedOrNull(tabId) ? tabId : getDisplayTabId(fileUrl));\r\n\r\n        deferred.promise.then(function (tabId) {\r\n            if (Utilities.isUndefinedOrNull(tabId)) {\r\n                $log.warn('BackgroundController.openFileUrlInTab: tabIdPromise null or undefined');\r\n                return;\r\n            }\r\n\r\n            BrowserHandler.tabs.update(tabId, {url: fileUrl});\r\n        });\r\n    }\r\n\r\n    function isResponseHeaderPrivate(response, header) {\r\n        return response[header] && response[header].toLowerCase().indexOf('private') !== -1;\r\n    }\r\n\r\n    function initialize() {\r\n        $log.getEnabledSetting().then(function (enabled) {\r\n            setUninstallUrl(enabled);\r\n        });\r\n\r\n    }\r\n\r\n    function setUninstallUrl(enabled) {\r\n        if (!Utilities.isNotUndefinedOrNull(enabled)) {\r\n            enabled = true;\r\n        }\r\n\r\n        // Check if setUninstallURL is enabled\r\n        if (Utilities.isNotUndefinedOrNull(BrowserHandler.runtime.setUninstallURL)) {\r\n            var manifest = Utilities.getManifest();\r\n            var appVersion = manifest ? manifest.version : -1;\r\n\r\n            // Use office.com as default uninstall page\r\n            var url = Utilities.isExtensionInDevelopmentMode() ? constants.LINKS.OFFICE_HOME_DEV_URL : constants.LINKS.OFFICE_HOME_URL;\r\n\r\n            // Check if logging is enabled by user\r\n            if (enabled) {\r\n                url = constants.LINKS.UNINSTALL + '?version=' + appVersion;\r\n                url = Utilities.isExtensionInDevelopmentMode() ? url + '&isDebug=true' : url;\r\n                // Editor specific\r\n                url = Utilities.shouldShowEditorMaterial() ? (url + '&shouldShowEditorMaterial=true') : url;\r\n            }\r\n\r\n            BrowserHandler.runtime.setUninstallURL(url);\r\n        }\r\n    }\r\n\r\n    function RespondWithError(response, sendResponse) {\r\n        if (IsInvalidMethod(response)) {\r\n            // for Invalid Method we want produce the same response regardless it came from extension or native code, it should be hidden from caller.\r\n            const invalidResponse = CreateInvalidMethodResponse();\r\n            $log.trackEvent('SSO_FAIL', invalidResponse);\r\n            sendResponse(invalidResponse);\r\n        }\r\n        else {\r\n            $log.trackEvent('SSO_FAIL', response);\r\n            sendResponse(response);\r\n        }\r\n    }\r\n\r\n    function IsInvalidMethod(response) {\r\n        return response.ext && response.ext.error === constants.SSO.RESPONSE_CODE_INVALID;\r\n    }\r\n\r\n    function CreateInvalidMethodResponse() {\r\n        return {\r\n            status: 'Fail',\r\n            code: 'OSError',\r\n            description: 'Error processing request.',\r\n            ext: { error: constants.SSO.RESPONSE_CODE_INVALID }\r\n        };\r\n    }\r\n\r\n    initialize();\r\n}\r\n","import angular from 'angular';\r\nimport { CopyPasteService, FileReaderEx, ImageReader } from '@1js/office-online-ccp';\r\n\r\nexport default angular\r\n    .module('app.copypaste', [])\r\n    .factory('copyPasteService', ['$log', 'imageReader', '$window', ($log, imageReader, $window) => new CopyPasteService($log, imageReader, $window)])\r\n    .factory('fileReader', () => new FileReaderEx())\r\n    .factory('imageReader', ['$log', 'fileReader', ($log, fileReader) => new ImageReader($log, fileReader)])\r\n    .name;\r\n","import angular from 'angular';\r\nimport fileService from './file.service';\r\nimport fileLoader from './fileLoader.service';\r\nimport oneDriveFileService from './oneDriveFile.service';\r\nimport sharePointFileService from './sharePointFile.service';\r\n\r\nexport default angular\r\n    .module('app.file', [])\r\n    .factory('fileService', ['$http', '$q', '$log', 'localize', 'notification', 'storage', 'fileLoader', 'userService', 'sharePointFileService', 'oneDriveFileService', fileService])\r\n    .factory('fileLoader', ['$http', '$q', '$log', fileLoader])\r\n    .service('oneDriveFileService', ['$http', '$log', 'localize', oneDriveFileService])\r\n    .service('sharePointFileService', ['$http', '$log', 'localize', 'userService', sharePointFileService])\r\n    .name;\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function fileService($http, $q, $log, localize, notification, storage, fileLoader, userService, sharePointFileService, oneDriveFileService) {\r\n    var currentUserType = constants.USER_TYPE.NONE;\r\n\r\n    function handleFileLoadError(error) {\r\n        if (Utilities.isUndefinedOrNull(error)) {\r\n            return;\r\n        }\r\n\r\n        switch (error) {\r\n            case (constants.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED):\r\n                notification.show(constants.NOTIFICATION.FILE_MAX_SIZE_BYTE_LIMIT_REACHED);\r\n                break;\r\n            case (constants.FILE.ERROR.UNSUPPORTED_FILE_TYPE):\r\n                notification.show(constants.NOTIFICATION.UNSUPPORTEDFILETYPE);\r\n                break;\r\n            default:\r\n                $log.error(`fileService.loadFile - ${error}`);\r\n                notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_GENERIC);\r\n        }\r\n    }\r\n\r\n    function handleFileUploadError(data, status) {\r\n        if (Utilities.isUndefinedOrNull(status)) {\r\n            return;\r\n        }\r\n\r\n        if (status === 415) {\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA);\r\n        }\r\n        else if (status === 502 || status === 503 || status === 509) {\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_SERVER);\r\n        }\r\n        else if (data) {\r\n            $log.error(`fileService.doUpload - ${status} - ${JSON.stringify(data)}`);\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_GENERIC);\r\n        }\r\n    }\r\n\r\n    function getFileServiceProvider(userType) {\r\n        var fileServiceProvider = null;\r\n\r\n        // Determine which file service to use and inject\r\n        switch (userType) {\r\n            case constants.USER_TYPE.O365:\r\n                fileServiceProvider = sharePointFileService;\r\n                break;\r\n            case constants.USER_TYPE.MSA:\r\n                fileServiceProvider = oneDriveFileService;\r\n                break;\r\n            default:\r\n                notification.show(constants.NOTIFICATION.NOTSIGNEDIN);\r\n                $log.trackEvent('FileUserTypeError_UserNotSignedIn');\r\n                break;\r\n        }\r\n\r\n        return fileServiceProvider;\r\n    }\r\n\r\n    function doUpload(file, callback) {\r\n        var fileServiceProvider;\r\n\r\n        userService.getUserType().then(function (userType) {\r\n            currentUserType = userType;\r\n            fileServiceProvider = getFileServiceProvider(userType);\r\n            if (Utilities.isUndefinedOrNull(fileServiceProvider)) {\r\n                callback(null);\r\n                return;\r\n            }\r\n\r\n            // Show a notification that file upload is now in progress\r\n            $log.trackEvent('FileServiceProviderUploadDocType', {'extension': Utilities.getFileExtension(file.name)});\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_IN_PROGRESS);\r\n\r\n            fileServiceProvider.doUpload(file, function (fileUrl, data, status) {\r\n                if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                    handleFileUploadError(data, status);\r\n                }\r\n\r\n                callback(fileUrl);\r\n            });\r\n        });\r\n    }\r\n\r\n    function upload(fileInfo, fileOrigin, callback) {\r\n        if (Utilities.isUndefinedOrNull(fileInfo) || (fileOrigin !== constants.FILE.ORIGIN.HTML5 && fileOrigin !== constants.FILE.ORIGIN.LOCAL_PATH)) {\r\n            $log.error(`fileService.upload(): Invalid argument: fileInfo: ${JSON.stringify(fileInfo)}, fileOrigin: ${fileOrigin}`);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        fileLoader.loadFile(fileInfo, fileOrigin).then(\r\n            function (file) {\r\n                doUpload(file, function (fileUrl) {\r\n                    if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                        callback(null);\r\n                        return;\r\n                    }\r\n\r\n                    storage.get('displayAutoSaveNotification').then(function (result) {\r\n                        if (Utilities.isUndefinedOrNull(result.displayAutoSaveNotification) || result.displayAutoSaveNotification === true) {\r\n                            var autoSaveNotification = constants.NOTIFICATION.AUTOSAVE;\r\n                            autoSaveNotification.message = currentUserType === constants.USER_TYPE.MSA ? constants.NOTIFICATION.AUTOSAVETOONEDRIVE : constants.NOTIFICATION.AUTOSAVETOSHAREPOINT;\r\n                            notification.show(autoSaveNotification);\r\n                        }\r\n\r\n                        callback(fileUrl);\r\n                    });\r\n                });\r\n            },\r\n            function (error) {\r\n                handleFileLoadError(error);\r\n                callback(null);\r\n                return;\r\n            }\r\n        );\r\n    }\r\n\r\n    return {upload};\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function fileLoader($http, $q, $log) {\r\n    function loadFileFromPath(filePath) {\r\n        var deferred = $q.defer();\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', filePath, true);\r\n        xhr.responseType = 'arraybuffer';\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200 || xhr.status === 0) {\r\n                    var result = {};\r\n                    result.content = xhr.response;\r\n                    result.name = filePath.replace(/^.*[\\\\/]/, '');\r\n                    deferred.resolve(result);\r\n                } else {\r\n                    $log.error(`fileLoader.loadFileFromPath(): XMLHttpRequestError at method loadFileFromPath - ${xhr.status}`);\r\n                    deferred.reject(constants.FILE.ERROR.LOAD_FROM_PATH);\r\n                    return deferred.promise;\r\n                }\r\n            }\r\n        };\r\n\r\n        xhr.send(null);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    function loadFileFromHTML5(file) {\r\n        var deferred = $q.defer();\r\n        if (Utilities.isUndefinedOrNull(constants.FILE.SUPPORTED_FILE_TYPES[Utilities.getFileExtension(file.name)])) {\r\n            deferred.reject(constants.FILE.ERROR.UNSUPPORTED_FILE_TYPE);\r\n            return deferred.promise;\r\n        }\r\n\r\n        var reader = new FileReader();\r\n        var result = {};\r\n        result.name = encodeURI(file.name);\r\n\r\n        reader.onload = function () {\r\n            result.content = new Int8Array(reader.result);\r\n            deferred.resolve(result);\r\n        };\r\n\r\n        reader.readAsArrayBuffer(file);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    function loadFile(fileInfo, fileOrigin) {\r\n        var deferred = $q.defer();\r\n\r\n        if (\r\n            Utilities.isUndefinedOrNull(fileInfo) ||\r\n            (Utilities.isUndefinedOrNull(fileOrigin) && fileOrigin !== constants.FILE.ORIGIN.HTML5 && fileOrigin !== constants.FILE.ORIGIN.LOCAL_PATH)\r\n        ) {\r\n            deferred.reject(`fileLoader.loadFile(): Invalid argument: fileInfo: ${JSON.stringify(fileInfo)}, fileOrigin: ${fileOrigin}`);\r\n            return deferred.promise;\r\n        }\r\n\r\n        if (fileOrigin === constants.FILE.ORIGIN.HTML5) {\r\n            // Check size of file before attempting to load the file\r\n            if (fileInfo.size > constants.FILE.MAX_SIZE_BYTE_LIMIT) {\r\n                $log.info(`fileLoader.loadFile(): Attempt to upload file with size exceeding limit - ${fileInfo.size} bytes`);\r\n                deferred.reject(constants.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED);\r\n                return deferred.promise;\r\n            }\r\n\r\n            loadFileFromHTML5(fileInfo).then(\r\n                function (file) {\r\n                    deferred.resolve(file);\r\n                },\r\n                function (error) {\r\n                    deferred.reject(error);\r\n                }\r\n            );\r\n        } else {\r\n            loadFileFromPath(fileInfo).then(\r\n                function (file) {\r\n                    if (!file.content) {\r\n                        $log.error(); (`fileLoader.loadFile(): loadFileFromPath failed`);\r\n                        deferred.reject(constants.FILE.ERROR.LOAD_FROM_PATH);\r\n                    }\r\n                    // Check size of file after attempting to load the file\r\n                    else if (file.content.byteLength > constants.FILE.MAX_SIZE_BYTE_LIMIT) {\r\n                        $log.info(`fileLoader.loadFile(): Attempt to upload file with size exceeding limit - ${file.content.byteLength} bytes`);\r\n                        deferred.reject(constants.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED);\r\n                    }\r\n                    else {\r\n                        deferred.resolve(file);\r\n                    }\r\n                },\r\n                function (error) {\r\n                    deferred.reject(error);\r\n                }\r\n            );\r\n        }\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    var service = {\r\n        loadFile: loadFile,\r\n    };\r\n\r\n    return service;\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function oneDriveFileService($http, $log, localize) {\r\n\r\n    this.doUpload = function (file, callback) {\r\n        var requestUrl = constants.ONEDRIVE.INSTANCE +\r\n            '/drive/root:/' + encodeURIComponent(localize.getLocalizedString('AppFolderName')) +\r\n            '/' + file.name + ':/content' + constants.ONEDRIVE.QUERY_OPTION;\r\n\r\n        var request = {\r\n            method: 'PUT',\r\n            url: requestUrl,\r\n            headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'X-UserType': constants.USER_TYPE.MSA\r\n            },\r\n            data: file.content,\r\n            transformRequest: []\r\n        };\r\n\r\n        $http(request).then(\r\n            function (response) {\r\n                var data = response.data;\r\n                $log.debug(`oneDriveFileService.doUpload - ${response.status} - ${data.webUrl}`);\r\n                callback(data.webUrl);\r\n            },\r\n            function (response) {\r\n                callback(null, null, response.statusText);\r\n            });\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function sharePointFileService($http, $log/* , constants */, localize, userService) {\r\n\r\n    function renameFile(fileName) {\r\n        var now = new Date().toISOString();\r\n        var reg = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+):(\\d+).+/;\r\n        var version = now.replace(reg, '_$1$2$3_$4$5$6.');\r\n        return fileName.replace('.', version);\r\n    }\r\n\r\n    this.doUpload = async function (file, callback) {\r\n        file.name = renameFile(file.name);\r\n        var userInfo = await userService.getUserInfo(constants.USER_TYPE.O365);\r\n        if (Utilities.isUndefinedOrNull(userInfo) || Utilities.isUndefinedOrNull(userInfo.oneDriveUrl)) {\r\n            $log.error('sharePointFileService.doUpload - Invalid OneDriveUrl');\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        var requestUrl = constants.O365CONFIG.UPLOAD_URL +\r\n            encodeURIComponent(localize.getLocalizedString('AppFolderName')) +\r\n            '/' + file.name + ':/content';\r\n\r\n        var request = {\r\n            method: 'PUT',\r\n            url: requestUrl,\r\n            headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'X-UserType': constants.USER_TYPE.O365\r\n            },\r\n            data: file.content,\r\n            transformRequest: []\r\n        };\r\n\r\n        $http(request).then(\r\n            function (response) {\r\n                var data = response.data;\r\n                var status = response.status;\r\n                var etag = '', fileUrl = '';\r\n\r\n                if (Utilities.isUndefinedOrNull(data.eTag)) {\r\n                    $log.error('sharePointFileService.doUpload - Missing eTag');\r\n                    callback(null, data, status);\r\n                    return;\r\n                }\r\n                etag = data.eTag.substring(1, data.eTag.indexOf(','));\r\n\r\n                if (Utilities.isUndefinedOrNull(data['@microsoft.graph.downloadUrl'])) {\r\n                    $log.error('sharePointFileService.doUpload - Missing downloadUrl');\r\n                    callback(null, data, status);\r\n                    return;\r\n                }\r\n                fileUrl = data['@microsoft.graph.downloadUrl'].replace(/download.aspx?.+/, 'WopiFrame.aspx?sourcedoc=' + etag);\r\n\r\n                $log.debug(`sharePointFileService.doUpload - ${status} - ${fileUrl}`);\r\n                callback(fileUrl);\r\n            },\r\n            function (response) {\r\n                callback(null, response.data, response.status);\r\n            });\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport '../diagnostics';\r\nimport '../diagnostics/aria';\r\nimport '../common';\r\nimport '../user';\r\nimport './background.controller';\r\nimport '../copypaste';\r\nimport '../file';\r\n\r\ndocument.body.setAttribute('data-ng-controller', 'BackgroundController as ctrl');\r\ndocument.documentElement.setAttribute('data-ng-app', 'app');\r\n\r\nexport default angular\r\n    .module('app', ['localization', 'app.common', 'app.diagnostics', 'app.user', 'app.file', 'app.background', 'app.copypaste']);\r\n","﻿/* global BrowserHandler angular chrome browser */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    /*\r\n     * An AngularJS Localization Service\r\n     *\r\n     * Written by Jim Lavin\r\n     * http://codingsmackdown.tv\r\n     *\r\n     * Modified to integrate with chrome.i18n infrastructure\r\n     */\r\n    var BrowserHandler = window.BrowserHandler;\r\n\r\n    if (!BrowserHandler) {\r\n        BrowserHandler = chrome || browser;\r\n    }\r\n\r\n    angular\r\n        .module('localization', [])\r\n        // localization service responsible for retrieving resource files from chrome.i18n\r\n        .factory('localize', ['$filter', function ($filter) {\r\n            var localize = {\r\n                // checks the dictionary for a localized resource string\r\n                getLocalizedString: function (value) {\r\n                    // default the result to an empty string\r\n                    var result = '';\r\n\r\n                    // pull localized resource using Chrome API\r\n                    result = BrowserHandler.i18n.getMessage(value);\r\n\r\n                    // return the value to the call\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            // return the local instance when called\r\n            return localize;\r\n        }])\r\n\r\n        // simple translation filter\r\n        // usage {{ TOKEN | i18n }}\r\n        .filter('i18n', ['localize', function (localize) {\r\n            return function (input) {\r\n                return localize.getLocalizedString(input);\r\n            };\r\n        }])\r\n\r\n        // translation directive that can handle dynamic strings\r\n        // updates the text value of the attached element\r\n        // usage <span data-i18n=\"TOKEN\" ></span>\r\n        // or\r\n        // <span data-i18n=\"TOKEN|VALUE1|VALUE2\" ></span>\r\n        .directive('i18n', ['localize', function (localize) {\r\n            var i18nDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length <= 1) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    // update the element\r\n                    for (var index = 1; index < values.length; index++) {\r\n                        var target = '{' + (index - 1) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.text(tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18n', function (value) {\r\n                        i18nDirective.updateText(elm, attrs.i18n);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18nDirective;\r\n        }])\r\n        // translation directive that can handle dynamic strings\r\n        // updates the attribute value of the attached element\r\n        // usage <span data-i18n-attr=\"TOKEN|ATTRIBUTE\" ></span>\r\n        // or\r\n        // <span data-i18n-attr=\"TOKEN|ATTRIBUTE|VALUE1|VALUE2\" ></span>\r\n        .directive('i18nAttr', ['localize', function (localize) {\r\n            var i18NAttrDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length < 2) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    for (var index = 2; index < values.length; index++) {\r\n                        var target = '{' + (index - 2) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.attr(values[1], tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18nAttr', function (value) {\r\n                        i18NAttrDirective.updateText(elm, value);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18NAttrDirective;\r\n        }]);\r\n})();\r\n"],"sourceRoot":""}