!function(){"use strict";angular.module("app.common").factory("httpErrorResponseInterceptor",["$q","$log","$timeout","$injector","constants","editorUtils",function(t,r,e,n,o,i){var s=0,a=0;return{responseError:function(c){if(c)switch(c.status){case 429:case-1:return r.error("httpErrorResponseInterceptor - "+c.status),i.isFeatureFlagEnabled("enableLicenseResponseRetry").then(r=>{if(r&&(c.config.url===o.MSACONFIG.LICENSE_ENDPOINT||c.config.url===o.O365CONFIG.LICENSE_ENDPOINT))return a<o.ERROR_RETRIES.HTTP_REQUEST?(a++,e((function(){return n.get("$http")(c.config)}),o.TIMEOUT.DEFAULT_TIMEOUT)):(a=0,t.reject(c))},()=>(a=0,t.reject(c)));case 0:r.debug(String.format("httpErrorResponseInterceptor - Request cancelled - {0}",c.config.url));break;case 401:r.info(String.format("httpErrorResponseInterceptor - {0} - {1} - {2}",c.status,c.config.url,JSON.stringify(c.data)));break;case 400:if(Utilities.isNotUndefinedOrNull(c.data)&&Utilities.isNotUndefinedOrNull(c.data.error_codes)&&50001===c.data.error_codes[0]){r.info(String.format("httpErrorResponseInterceptor -  Invalid AADService - {0} - {1}",c.status,JSON.stringify(c.data)));break}if(Utilities.isNotUndefinedOrNull(c.data)&&Utilities.isNotUndefinedOrNull(c.data.error_codes)&&50079===c.data.error_codes[0]){if(r.info(String.format("httpErrorResponseInterceptor -  Interaction required - {0} - {1}",c.status,JSON.stringify(c.data))),s<o.ERROR_RETRIES.HTTP_REQUEST)return s++,e((function(){return n.get("$http")(c.config)}),o.TIMEOUT.USER_INFO_LOOKUP);s=0}default:r.error("httpErrorResponseInterceptor - "+c.status)}return t.reject(c)}}}])}();